{
	"compiler": {
		"version": "0.8.7+commit.e28d00a7"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "_receiver",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "AirdropEvent",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "address[]",
						"name": "_receiver",
						"type": "address[]"
					},
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "Airdrop",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "AirdropHandler",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "adminArray",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "token20Address",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "whitelistArray",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"Airdrop(address[],uint256)": {
					"details": "Airdrop Token to Whitelist User ** Params **",
					"params": {
						"_amount": "amount of token to airdrop for each user",
						"_receiver": "list of receiver"
					}
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"study/token-airdrop/contracts/handler/AirdropHandler.sol": "AirdropHandler"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/access/Ownable.sol": {
			"keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
			"license": "MIT",
			"urls": [
				"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
				"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
			"license": "MIT",
			"urls": [
				"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
				"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
			]
		},
		"study/token-airdrop/contracts/common/ReentrancyGuard.sol": {
			"keccak256": "0xe186ac5fcc35ae371d0c6f985076b4432e6e61a31ed36f3cadf141e0d99a6dfa",
			"license": "MIT",
			"urls": [
				"bzz-raw://2f2ae410afc736c8f044d072092df72ebe0f851fb20a8e0c4877ccc4b498a587",
				"dweb:/ipfs/Qmbz564kEy6gLngAnd41pYwTz9TPdPezQqhwgrXm1NWUxM"
			]
		},
		"study/token-airdrop/contracts/common/Upgradeable.sol": {
			"keccak256": "0x606677414a9107a99b226f3df2d236fe75faee346c6a0fe1a962a8a9d7524a60",
			"license": "MIT",
			"urls": [
				"bzz-raw://8b6df16caa57be2c4b1e4b877a79781fa6231219a6eb04e0f857c902ab356edf",
				"dweb:/ipfs/QmVkcXzutn9oBsfTk6z4pd48dLhYy44cbHKSxHewELRnth"
			]
		},
		"study/token-airdrop/contracts/handler/AirdropHandler.sol": {
			"keccak256": "0x3d4315c6cacbfce504b3bf1761ddfdcc455e9ecfb72104833d885d95f7c96a74",
			"license": "MIT",
			"urls": [
				"bzz-raw://07c699744d30d57c3ea10b4074752e64995be1592c9cd652224da59daae6d18f",
				"dweb:/ipfs/QmQT6of2znBqpE3VLhjLuuS8A5vD5gy4HAW2GGVkZNXivT"
			]
		},
		"study/token-airdrop/contracts/interfaces/IERC20.sol": {
			"keccak256": "0x52838f8c98626764b3b0941bb91b3f3cd0333417463267741e7dce5001368ea2",
			"license": "MIT",
			"urls": [
				"bzz-raw://a73aa3ad7ac6d68d34995ba1fdd5ab6d3bce16095e03df33ae552248f9d3d9bf",
				"dweb:/ipfs/QmQJdXwARdDLXjfdnA1wAeZcPmV4N4AvUM7gpbA4Y8Us45"
			]
		}
	},
	"version": 1
}