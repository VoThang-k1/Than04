{
	"id": "68809eed30a2044b23cdbb064c2f7c2b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"study/token-airdrop/contracts/Proxy.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.2;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract Proxy is Ownable{\r\n    bytes32 private constant implementationPosition =\r\n        keccak256(\"implementation.contract.token-airdrop:2023\");\r\n    bytes32 private constant proxyOwnerPosition =\r\n        keccak256(\"owner.contract.token-airdrop:2023\");\r\n\r\n    event Upgraded(address indexed implementation);\r\n    event ProxyOwnershipTransferred(\r\n        address indexed previousOwner,\r\n        address indexed newOwner\r\n    );\r\n\r\n    constructor() {\r\n        _setUpgradeabilityOwner(msg.sender);\r\n    }\r\n\r\n    modifier onlyProxyOwner() {\r\n        require(msg.sender == proxyOwner());\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev To get the address of the proxy contract's owner\r\n     */\r\n    function proxyOwner() public view returns (address owner) {\r\n        bytes32 position = proxyOwnerPosition;\r\n        assembly {\r\n            owner := sload(position)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev To get the address of the proxy contract\r\n     */\r\n    function implementation() public view returns (address impl) {\r\n        bytes32 position = implementationPosition;\r\n        assembly {\r\n            impl := sload(position)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev  To get the address of the proxy contract\r\n     */\r\n    function transferProxyOwnership(address _newOwner) public onlyProxyOwner {\r\n        require(\r\n            _newOwner != address(0),\r\n            \"Transfer proxy ownership to zero address\"\r\n        );\r\n        require(\r\n            _newOwner != proxyOwner(),\r\n            \"Transfer proxy ownership to current owner\"\r\n        );\r\n        emit ProxyOwnershipTransferred(proxyOwner(), _newOwner);\r\n        _setUpgradeabilityOwner(_newOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev To upgrade the logic contract to new one\r\n     */\r\n    function upgradeTo(address _newImplementation) public onlyProxyOwner {\r\n        address currentImplementation = implementation();\r\n        require(currentImplementation != _newImplementation);\r\n        _setImplementation(_newImplementation);\r\n        emit Upgraded(_newImplementation);\r\n    }\r\n\r\n    function _setImplementation(address _newImplementation) internal {\r\n        bytes32 position = implementationPosition;\r\n        assembly {\r\n            sstore(position, _newImplementation)\r\n        }\r\n    }\r\n\r\n    function _setUpgradeabilityOwner(address _newProxyOwner) internal {\r\n        bytes32 position = proxyOwnerPosition;\r\n        assembly {\r\n            sstore(position, _newProxyOwner)\r\n        }\r\n    }\r\n\r\n    function _delegatecall() internal {\r\n        address _impl = implementation();\r\n        require(_impl != address(0), \"Impl address is 0\");\r\n\r\n        assembly {\r\n            let ptr := mload(0x40)\r\n            calldatacopy(ptr, 0, calldatasize())\r\n            let result := delegatecall(\r\n                sub(gas(), 10000),\r\n                _impl,\r\n                ptr,\r\n                calldatasize(),\r\n                0,\r\n                0\r\n            )\r\n            let size := returndatasize()\r\n            returndatacopy(ptr, 0, size)\r\n\r\n            switch result\r\n            case 0 {\r\n                revert(ptr, size)\r\n            }\r\n            default {\r\n                return(ptr, size)\r\n            }\r\n        }\r\n    }\r\n\r\n    fallback() external payable {\r\n        _delegatecall();\r\n    }\r\n\r\n    receive() external payable {}\r\n}\r\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"study/token-airdrop/contracts/Proxy.sol": {
				"Proxy": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "ProxyOwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "impl",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxyOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_newOwner",
									"type": "address"
								}
							],
							"name": "transferProxyOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_newImplementation",
									"type": "address"
								}
							],
							"name": "upgradeTo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"implementation()": {
								"details": "To get the address of the proxy contract"
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"proxyOwner()": {
								"details": "To get the address of the proxy contract's owner"
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"transferProxyOwnership(address)": {
								"details": "To get the address of the proxy contract"
							},
							"upgradeTo(address)": {
								"details": "To upgrade the logic contract to new one"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"study/token-airdrop/contracts/Proxy.sol\":116:3429  contract Proxy is Ownable{\r... */\n  mstore(0x40, 0x80)\n    /* \"study/token-airdrop/contracts/Proxy.sol\":554:622  constructor() {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_5\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  tag_6\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:965  _msgSender */\n  shl(0x20, tag_7)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_6:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  shl(0x20, tag_8)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_5:\n    /* \"study/token-airdrop/contracts/Proxy.sol\":579:614  _setUpgradeabilityOwner(msg.sender) */\n  tag_10\n    /* \"study/token-airdrop/contracts/Proxy.sol\":603:613  msg.sender */\n  caller\n    /* \"study/token-airdrop/contracts/Proxy.sol\":579:602  _setUpgradeabilityOwner */\n  shl(0x20, tag_11)\n    /* \"study/token-airdrop/contracts/Proxy.sol\":579:614  _setUpgradeabilityOwner(msg.sender) */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"study/token-airdrop/contracts/Proxy.sol\":116:3429  contract Proxy is Ownable{\r... */\n  jump(tag_12)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_7:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"study/token-airdrop/contracts/Proxy.sol\":2380:2579  function _setUpgradeabilityOwner(address _newProxyOwner) internal {\r... */\ntag_11:\n    /* \"study/token-airdrop/contracts/Proxy.sol\":2457:2473  bytes32 position */\n  0x00\n    /* \"study/token-airdrop/contracts/Proxy.sol\":324:370  keccak256(\"owner.contract.token-airdrop:2023\") */\n  0x602d78baa5535dcda7f8b79e40e6339e355543a4727add9270060248e9f41912\n    /* \"study/token-airdrop/contracts/Proxy.sol\":2457:2494  bytes32 position = proxyOwnerPosition */\n  swap1\n  pop\n    /* \"study/token-airdrop/contracts/Proxy.sol\":2546:2560  _newProxyOwner */\n  dup2\n    /* \"study/token-airdrop/contracts/Proxy.sol\":2536:2544  position */\n  dup2\n    /* \"study/token-airdrop/contracts/Proxy.sol\":2529:2561  sstore(position, _newProxyOwner) */\n  sstore\n    /* \"study/token-airdrop/contracts/Proxy.sol\":2514:2572  {\r... */\n  pop\n    /* \"study/token-airdrop/contracts/Proxy.sol\":2380:2579  function _setUpgradeabilityOwner(address _newProxyOwner) internal {\r... */\n  pop\n  jump\t// out\n    /* \"study/token-airdrop/contracts/Proxy.sol\":116:3429  contract Proxy is Ownable{\r... */\ntag_12:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"study/token-airdrop/contracts/Proxy.sol\":116:3429  contract Proxy is Ownable{\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_10\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xf1739cae\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_10:\n      dup1\n      0x025313a2\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3659cfe6\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x5c60da1b\n      eq\n      tag_5\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n        /* \"study/token-airdrop/contracts/Proxy.sol\":3366:3381  _delegatecall() */\n      tag_15\n        /* \"study/token-airdrop/contracts/Proxy.sol\":3366:3379  _delegatecall */\n      tag_16\n        /* \"study/token-airdrop/contracts/Proxy.sol\":3366:3381  _delegatecall() */\n      jump\t// in\n    tag_15:\n        /* \"study/token-airdrop/contracts/Proxy.sol\":116:3429  contract Proxy is Ownable{\r... */\n      stop\n        /* \"study/token-airdrop/contracts/Proxy.sol\":810:993  function proxyOwner() public view returns (address owner) {\r... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      pop\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"study/token-airdrop/contracts/Proxy.sol\":1866:2158  function upgradeTo(address _newImplementation) public onlyProxyOwner {\r... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      pop\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      tag_26\n      jump\t// in\n    tag_23:\n      stop\n        /* \"study/token-airdrop/contracts/Proxy.sol\":1073:1262  function implementation() public view returns (address impl) {\r... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      pop\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      pop\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      pop\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"study/token-airdrop/contracts/Proxy.sol\":1343:1786  function transferProxyOwnership(address _newOwner) public onlyProxyOwner {\r... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      pop\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_40:\n      tag_41\n      jump\t// in\n    tag_39:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      pop\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_44:\n      tag_45\n      jump\t// in\n    tag_43:\n      stop\n        /* \"study/token-airdrop/contracts/Proxy.sol\":2587:3319  function _delegatecall() internal {\r... */\n    tag_16:\n        /* \"study/token-airdrop/contracts/Proxy.sol\":2632:2645  address _impl */\n      0x00\n        /* \"study/token-airdrop/contracts/Proxy.sol\":2648:2664  implementation() */\n      tag_47\n        /* \"study/token-airdrop/contracts/Proxy.sol\":2648:2662  implementation */\n      tag_29\n        /* \"study/token-airdrop/contracts/Proxy.sol\":2648:2664  implementation() */\n      jump\t// in\n    tag_47:\n        /* \"study/token-airdrop/contracts/Proxy.sol\":2632:2664  address _impl = implementation() */\n      swap1\n      pop\n        /* \"study/token-airdrop/contracts/Proxy.sol\":2700:2701  0 */\n      0x00\n        /* \"study/token-airdrop/contracts/Proxy.sol\":2683:2702  _impl != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"study/token-airdrop/contracts/Proxy.sol\":2683:2688  _impl */\n      dup2\n        /* \"study/token-airdrop/contracts/Proxy.sol\":2683:2702  _impl != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"study/token-airdrop/contracts/Proxy.sol\":2675:2724  require(_impl != address(0), \"Impl address is 0\") */\n      tag_48\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_49\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_48:\n        /* \"study/token-airdrop/contracts/Proxy.sol\":2778:2782  0x40 */\n      0x40\n        /* \"study/token-airdrop/contracts/Proxy.sol\":2772:2783  mload(0x40) */\n      mload\n        /* \"study/token-airdrop/contracts/Proxy.sol\":2818:2832  calldatasize() */\n      calldatasize\n        /* \"study/token-airdrop/contracts/Proxy.sol\":2815:2816  0 */\n      0x00\n        /* \"study/token-airdrop/contracts/Proxy.sol\":2810:2813  ptr */\n      dup3\n        /* \"study/token-airdrop/contracts/Proxy.sol\":2797:2833  calldatacopy(ptr, 0, calldatasize()) */\n      calldatacopy\n        /* \"study/token-airdrop/contracts/Proxy.sol\":3027:3028  0 */\n      0x00\n        /* \"study/token-airdrop/contracts/Proxy.sol\":3007:3008  0 */\n      dup1\n        /* \"study/token-airdrop/contracts/Proxy.sol\":2974:2988  calldatasize() */\n      calldatasize\n        /* \"study/token-airdrop/contracts/Proxy.sol\":2952:2955  ptr */\n      dup4\n        /* \"study/token-airdrop/contracts/Proxy.sol\":2928:2933  _impl */\n      dup6\n        /* \"study/token-airdrop/contracts/Proxy.sol\":2903:2908  10000 */\n      0x2710\n        /* \"study/token-airdrop/contracts/Proxy.sol\":2896:2901  gas() */\n      gas\n        /* \"study/token-airdrop/contracts/Proxy.sol\":2892:2909  sub(gas(), 10000) */\n      sub\n        /* \"study/token-airdrop/contracts/Proxy.sol\":2861:3043  delegatecall(\r... */\n      delegatecall\n        /* \"study/token-airdrop/contracts/Proxy.sol\":3069:3085  returndatasize() */\n      returndatasize\n        /* \"study/token-airdrop/contracts/Proxy.sol\":3122:3126  size */\n      dup1\n        /* \"study/token-airdrop/contracts/Proxy.sol\":3119:3120  0 */\n      0x00\n        /* \"study/token-airdrop/contracts/Proxy.sol\":3114:3117  ptr */\n      dup5\n        /* \"study/token-airdrop/contracts/Proxy.sol\":3099:3127  returndatacopy(ptr, 0, size) */\n      returndatacopy\n        /* \"study/token-airdrop/contracts/Proxy.sol\":3150:3156  result */\n      dup2\n        /* \"study/token-airdrop/contracts/Proxy.sol\":3175:3176  0 */\n      0x00\n        /* \"study/token-airdrop/contracts/Proxy.sol\":3170:3228  case 0 {\r... */\n      dup2\n      eq\n      tag_52\n      jumpi\n        /* \"study/token-airdrop/contracts/Proxy.sol\":3281:3285  size */\n      dup2\n        /* \"study/token-airdrop/contracts/Proxy.sol\":3276:3279  ptr */\n      dup5\n        /* \"study/token-airdrop/contracts/Proxy.sol\":3269:3286  return(ptr, size) */\n      return\n        /* \"study/token-airdrop/contracts/Proxy.sol\":3170:3228  case 0 {\r... */\n    tag_52:\n        /* \"study/token-airdrop/contracts/Proxy.sol\":3208:3212  size */\n      dup2\n        /* \"study/token-airdrop/contracts/Proxy.sol\":3203:3206  ptr */\n      dup5\n        /* \"study/token-airdrop/contracts/Proxy.sol\":3196:3213  revert(ptr, size) */\n      revert\n        /* \"study/token-airdrop/contracts/Proxy.sol\":810:993  function proxyOwner() public view returns (address owner) {\r... */\n    tag_19:\n        /* \"study/token-airdrop/contracts/Proxy.sol\":853:866  address owner */\n      0x00\n        /* \"study/token-airdrop/contracts/Proxy.sol\":879:895  bytes32 position */\n      dup1\n        /* \"study/token-airdrop/contracts/Proxy.sol\":324:370  keccak256(\"owner.contract.token-airdrop:2023\") */\n      0x602d78baa5535dcda7f8b79e40e6339e355543a4727add9270060248e9f41912\n        /* \"study/token-airdrop/contracts/Proxy.sol\":879:916  bytes32 position = proxyOwnerPosition */\n      swap1\n      pop\n        /* \"study/token-airdrop/contracts/Proxy.sol\":966:974  position */\n      dup1\n        /* \"study/token-airdrop/contracts/Proxy.sol\":960:975  sload(position) */\n      sload\n        /* \"study/token-airdrop/contracts/Proxy.sol\":951:975  owner := sload(position) */\n      swap2\n      pop\n        /* \"study/token-airdrop/contracts/Proxy.sol\":936:986  {\r... */\n      pop\n        /* \"study/token-airdrop/contracts/Proxy.sol\":810:993  function proxyOwner() public view returns (address owner) {\r... */\n      swap1\n      jump\t// out\n        /* \"study/token-airdrop/contracts/Proxy.sol\":1866:2158  function upgradeTo(address _newImplementation) public onlyProxyOwner {\r... */\n    tag_26:\n        /* \"study/token-airdrop/contracts/Proxy.sol\":689:701  proxyOwner() */\n      tag_55\n        /* \"study/token-airdrop/contracts/Proxy.sol\":689:699  proxyOwner */\n      tag_19\n        /* \"study/token-airdrop/contracts/Proxy.sol\":689:701  proxyOwner() */\n      jump\t// in\n    tag_55:\n        /* \"study/token-airdrop/contracts/Proxy.sol\":675:701  msg.sender == proxyOwner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"study/token-airdrop/contracts/Proxy.sol\":675:685  msg.sender */\n      caller\n        /* \"study/token-airdrop/contracts/Proxy.sol\":675:701  msg.sender == proxyOwner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"study/token-airdrop/contracts/Proxy.sol\":667:702  require(msg.sender == proxyOwner()) */\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n        /* \"study/token-airdrop/contracts/Proxy.sol\":1946:1975  address currentImplementation */\n      0x00\n        /* \"study/token-airdrop/contracts/Proxy.sol\":1978:1994  implementation() */\n      tag_58\n        /* \"study/token-airdrop/contracts/Proxy.sol\":1978:1992  implementation */\n      tag_29\n        /* \"study/token-airdrop/contracts/Proxy.sol\":1978:1994  implementation() */\n      jump\t// in\n    tag_58:\n        /* \"study/token-airdrop/contracts/Proxy.sol\":1946:1994  address currentImplementation = implementation() */\n      swap1\n      pop\n        /* \"study/token-airdrop/contracts/Proxy.sol\":2038:2056  _newImplementation */\n      dup2\n        /* \"study/token-airdrop/contracts/Proxy.sol\":2013:2056  currentImplementation != _newImplementation */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"study/token-airdrop/contracts/Proxy.sol\":2013:2034  currentImplementation */\n      dup2\n        /* \"study/token-airdrop/contracts/Proxy.sol\":2013:2056  currentImplementation != _newImplementation */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"study/token-airdrop/contracts/Proxy.sol\":2005:2057  require(currentImplementation != _newImplementation) */\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n        /* \"study/token-airdrop/contracts/Proxy.sol\":2068:2106  _setImplementation(_newImplementation) */\n      tag_60\n        /* \"study/token-airdrop/contracts/Proxy.sol\":2087:2105  _newImplementation */\n      dup3\n        /* \"study/token-airdrop/contracts/Proxy.sol\":2068:2086  _setImplementation */\n      tag_61\n        /* \"study/token-airdrop/contracts/Proxy.sol\":2068:2106  _setImplementation(_newImplementation) */\n      jump\t// in\n    tag_60:\n        /* \"study/token-airdrop/contracts/Proxy.sol\":2131:2149  _newImplementation */\n      dup2\n        /* \"study/token-airdrop/contracts/Proxy.sol\":2122:2150  Upgraded(_newImplementation) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"study/token-airdrop/contracts/Proxy.sol\":1935:2158  {\r... */\n      pop\n        /* \"study/token-airdrop/contracts/Proxy.sol\":1866:2158  function upgradeTo(address _newImplementation) public onlyProxyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"study/token-airdrop/contracts/Proxy.sol\":1073:1262  function implementation() public view returns (address impl) {\r... */\n    tag_29:\n        /* \"study/token-airdrop/contracts/Proxy.sol\":1120:1132  address impl */\n      0x00\n        /* \"study/token-airdrop/contracts/Proxy.sol\":1145:1161  bytes32 position */\n      dup1\n        /* \"study/token-airdrop/contracts/Proxy.sol\":207:262  keccak256(\"implementation.contract.token-airdrop:2023\") */\n      0x491fa9ff5dd08277a905cf36956e3786a257e6dfd0023908066c75c4559f86af\n        /* \"study/token-airdrop/contracts/Proxy.sol\":1145:1186  bytes32 position = implementationPosition */\n      swap1\n      pop\n        /* \"study/token-airdrop/contracts/Proxy.sol\":1235:1243  position */\n      dup1\n        /* \"study/token-airdrop/contracts/Proxy.sol\":1229:1244  sload(position) */\n      sload\n        /* \"study/token-airdrop/contracts/Proxy.sol\":1221:1244  impl := sload(position) */\n      swap2\n      pop\n        /* \"study/token-airdrop/contracts/Proxy.sol\":1206:1255  {\r... */\n      pop\n        /* \"study/token-airdrop/contracts/Proxy.sol\":1073:1262  function implementation() public view returns (address impl) {\r... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_33:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_64\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_65\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_64:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_67\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_68\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_67:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_36:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1266:1279  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"study/token-airdrop/contracts/Proxy.sol\":1343:1786  function transferProxyOwnership(address _newOwner) public onlyProxyOwner {\r... */\n    tag_41:\n        /* \"study/token-airdrop/contracts/Proxy.sol\":689:701  proxyOwner() */\n      tag_71\n        /* \"study/token-airdrop/contracts/Proxy.sol\":689:699  proxyOwner */\n      tag_19\n        /* \"study/token-airdrop/contracts/Proxy.sol\":689:701  proxyOwner() */\n      jump\t// in\n    tag_71:\n        /* \"study/token-airdrop/contracts/Proxy.sol\":675:701  msg.sender == proxyOwner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"study/token-airdrop/contracts/Proxy.sol\":675:685  msg.sender */\n      caller\n        /* \"study/token-airdrop/contracts/Proxy.sol\":675:701  msg.sender == proxyOwner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"study/token-airdrop/contracts/Proxy.sol\":667:702  require(msg.sender == proxyOwner()) */\n      tag_72\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_72:\n        /* \"study/token-airdrop/contracts/Proxy.sol\":1470:1471  0 */\n      0x00\n        /* \"study/token-airdrop/contracts/Proxy.sol\":1449:1472  _newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"study/token-airdrop/contracts/Proxy.sol\":1449:1458  _newOwner */\n      dup2\n        /* \"study/token-airdrop/contracts/Proxy.sol\":1449:1472  _newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"study/token-airdrop/contracts/Proxy.sol\":1427:1540  require(\r... */\n      tag_74\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_75\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_74:\n        /* \"study/token-airdrop/contracts/Proxy.sol\":1586:1598  proxyOwner() */\n      tag_77\n        /* \"study/token-airdrop/contracts/Proxy.sol\":1586:1596  proxyOwner */\n      tag_19\n        /* \"study/token-airdrop/contracts/Proxy.sol\":1586:1598  proxyOwner() */\n      jump\t// in\n    tag_77:\n        /* \"study/token-airdrop/contracts/Proxy.sol\":1573:1598  _newOwner != proxyOwner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"study/token-airdrop/contracts/Proxy.sol\":1573:1582  _newOwner */\n      dup2\n        /* \"study/token-airdrop/contracts/Proxy.sol\":1573:1598  _newOwner != proxyOwner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"study/token-airdrop/contracts/Proxy.sol\":1551:1667  require(\r... */\n      tag_78\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_79\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_78:\n        /* \"study/token-airdrop/contracts/Proxy.sol\":1723:1732  _newOwner */\n      dup1\n        /* \"study/token-airdrop/contracts/Proxy.sol\":1683:1733  ProxyOwnershipTransferred(proxyOwner(), _newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"study/token-airdrop/contracts/Proxy.sol\":1709:1721  proxyOwner() */\n      tag_81\n        /* \"study/token-airdrop/contracts/Proxy.sol\":1709:1719  proxyOwner */\n      tag_19\n        /* \"study/token-airdrop/contracts/Proxy.sol\":1709:1721  proxyOwner() */\n      jump\t// in\n    tag_81:\n        /* \"study/token-airdrop/contracts/Proxy.sol\":1683:1733  ProxyOwnershipTransferred(proxyOwner(), _newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x5a3e66efaa1e445ebd894728a69d6959842ea1e97bd79b892797106e270efcd9\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"study/token-airdrop/contracts/Proxy.sol\":1744:1778  _setUpgradeabilityOwner(_newOwner) */\n      tag_82\n        /* \"study/token-airdrop/contracts/Proxy.sol\":1768:1777  _newOwner */\n      dup2\n        /* \"study/token-airdrop/contracts/Proxy.sol\":1744:1767  _setUpgradeabilityOwner */\n      tag_83\n        /* \"study/token-airdrop/contracts/Proxy.sol\":1744:1778  _setUpgradeabilityOwner(_newOwner) */\n      jump\t// in\n    tag_82:\n        /* \"study/token-airdrop/contracts/Proxy.sol\":1343:1786  function transferProxyOwnership(address _newOwner) public onlyProxyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_85\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_65\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_85:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2189:2190  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2177  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_87\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_88\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_87:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_90\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_68\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_90:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"study/token-airdrop/contracts/Proxy.sol\":2166:2372  function _setImplementation(address _newImplementation) internal {\r... */\n    tag_61:\n        /* \"study/token-airdrop/contracts/Proxy.sol\":2242:2258  bytes32 position */\n      0x00\n        /* \"study/token-airdrop/contracts/Proxy.sol\":207:262  keccak256(\"implementation.contract.token-airdrop:2023\") */\n      0x491fa9ff5dd08277a905cf36956e3786a257e6dfd0023908066c75c4559f86af\n        /* \"study/token-airdrop/contracts/Proxy.sol\":2242:2283  bytes32 position = implementationPosition */\n      swap1\n      pop\n        /* \"study/token-airdrop/contracts/Proxy.sol\":2335:2353  _newImplementation */\n      dup2\n        /* \"study/token-airdrop/contracts/Proxy.sol\":2325:2333  position */\n      dup2\n        /* \"study/token-airdrop/contracts/Proxy.sol\":2318:2354  sstore(position, _newImplementation) */\n      sstore\n        /* \"study/token-airdrop/contracts/Proxy.sol\":2303:2365  {\r... */\n      pop\n        /* \"study/token-airdrop/contracts/Proxy.sol\":2166:2372  function _setImplementation(address _newImplementation) internal {\r... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_65:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      tag_93\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1443  _msgSender */\n      tag_94\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      jump\t// in\n    tag_93:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      tag_95\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1427  owner */\n      tag_36\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      jump\t// in\n    tag_95:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_96\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_97\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_96:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"study/token-airdrop/contracts/Proxy.sol\":2380:2579  function _setUpgradeabilityOwner(address _newProxyOwner) internal {\r... */\n    tag_83:\n        /* \"study/token-airdrop/contracts/Proxy.sol\":2457:2473  bytes32 position */\n      0x00\n        /* \"study/token-airdrop/contracts/Proxy.sol\":324:370  keccak256(\"owner.contract.token-airdrop:2023\") */\n      0x602d78baa5535dcda7f8b79e40e6339e355543a4727add9270060248e9f41912\n        /* \"study/token-airdrop/contracts/Proxy.sol\":2457:2494  bytes32 position = proxyOwnerPosition */\n      swap1\n      pop\n        /* \"study/token-airdrop/contracts/Proxy.sol\":2546:2560  _newProxyOwner */\n      dup2\n        /* \"study/token-airdrop/contracts/Proxy.sol\":2536:2544  position */\n      dup2\n        /* \"study/token-airdrop/contracts/Proxy.sol\":2529:2561  sstore(position, _newProxyOwner) */\n      sstore\n        /* \"study/token-airdrop/contracts/Proxy.sol\":2514:2572  {\r... */\n      pop\n        /* \"study/token-airdrop/contracts/Proxy.sol\":2380:2579  function _setUpgradeabilityOwner(address _newProxyOwner) internal {\r... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_94:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_103:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_105\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_106\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:481   */\n    tag_25:\n        /* \"#utility.yul\":211:217   */\n      0x00\n        /* \"#utility.yul\":260:262   */\n      0x20\n        /* \"#utility.yul\":248:257   */\n      dup3\n        /* \"#utility.yul\":239:246   */\n      dup5\n        /* \"#utility.yul\":235:258   */\n      sub\n        /* \"#utility.yul\":231:263   */\n      slt\n        /* \"#utility.yul\":228:347   */\n      iszero\n      tag_108\n      jumpi\n        /* \"#utility.yul\":266:345   */\n      tag_109\n      tag_110\n      jump\t// in\n    tag_109:\n        /* \"#utility.yul\":228:347   */\n    tag_108:\n        /* \"#utility.yul\":386:387   */\n      0x00\n        /* \"#utility.yul\":411:464   */\n      tag_111\n        /* \"#utility.yul\":456:463   */\n      dup5\n        /* \"#utility.yul\":447:453   */\n      dup3\n        /* \"#utility.yul\":436:445   */\n      dup6\n        /* \"#utility.yul\":432:454   */\n      add\n        /* \"#utility.yul\":411:464   */\n      tag_103\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":401:464   */\n      swap2\n      pop\n        /* \"#utility.yul\":357:474   */\n      pop\n        /* \"#utility.yul\":152:481   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":487:605   */\n    tag_112:\n        /* \"#utility.yul\":574:598   */\n      tag_114\n        /* \"#utility.yul\":592:597   */\n      dup2\n        /* \"#utility.yul\":574:598   */\n      tag_115\n      jump\t// in\n    tag_114:\n        /* \"#utility.yul\":569:572   */\n      dup3\n        /* \"#utility.yul\":562:599   */\n      mstore\n        /* \"#utility.yul\":487:605   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":611:977   */\n    tag_116:\n        /* \"#utility.yul\":753:756   */\n      0x00\n        /* \"#utility.yul\":774:841   */\n      tag_118\n        /* \"#utility.yul\":838:840   */\n      0x26\n        /* \"#utility.yul\":833:836   */\n      dup4\n        /* \"#utility.yul\":774:841   */\n      tag_119\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":767:841   */\n      swap2\n      pop\n        /* \"#utility.yul\":850:943   */\n      tag_120\n        /* \"#utility.yul\":939:942   */\n      dup3\n        /* \"#utility.yul\":850:943   */\n      tag_121\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":968:970   */\n      0x40\n        /* \"#utility.yul\":963:966   */\n      dup3\n        /* \"#utility.yul\":959:971   */\n      add\n        /* \"#utility.yul\":952:971   */\n      swap1\n      pop\n        /* \"#utility.yul\":611:977   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":983:1349   */\n    tag_122:\n        /* \"#utility.yul\":1125:1128   */\n      0x00\n        /* \"#utility.yul\":1146:1213   */\n      tag_124\n        /* \"#utility.yul\":1210:1212   */\n      0x28\n        /* \"#utility.yul\":1205:1208   */\n      dup4\n        /* \"#utility.yul\":1146:1213   */\n      tag_119\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":1139:1213   */\n      swap2\n      pop\n        /* \"#utility.yul\":1222:1315   */\n      tag_125\n        /* \"#utility.yul\":1311:1314   */\n      dup3\n        /* \"#utility.yul\":1222:1315   */\n      tag_126\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":1340:1342   */\n      0x40\n        /* \"#utility.yul\":1335:1338   */\n      dup3\n        /* \"#utility.yul\":1331:1343   */\n      add\n        /* \"#utility.yul\":1324:1343   */\n      swap1\n      pop\n        /* \"#utility.yul\":983:1349   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1355:1721   */\n    tag_127:\n        /* \"#utility.yul\":1497:1500   */\n      0x00\n        /* \"#utility.yul\":1518:1585   */\n      tag_129\n        /* \"#utility.yul\":1582:1584   */\n      0x20\n        /* \"#utility.yul\":1577:1580   */\n      dup4\n        /* \"#utility.yul\":1518:1585   */\n      tag_119\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":1511:1585   */\n      swap2\n      pop\n        /* \"#utility.yul\":1594:1687   */\n      tag_130\n        /* \"#utility.yul\":1683:1686   */\n      dup3\n        /* \"#utility.yul\":1594:1687   */\n      tag_131\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":1712:1714   */\n      0x20\n        /* \"#utility.yul\":1707:1710   */\n      dup3\n        /* \"#utility.yul\":1703:1715   */\n      add\n        /* \"#utility.yul\":1696:1715   */\n      swap1\n      pop\n        /* \"#utility.yul\":1355:1721   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1727:2093   */\n    tag_132:\n        /* \"#utility.yul\":1869:1872   */\n      0x00\n        /* \"#utility.yul\":1890:1957   */\n      tag_134\n        /* \"#utility.yul\":1954:1956   */\n      0x11\n        /* \"#utility.yul\":1949:1952   */\n      dup4\n        /* \"#utility.yul\":1890:1957   */\n      tag_119\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":1883:1957   */\n      swap2\n      pop\n        /* \"#utility.yul\":1966:2059   */\n      tag_135\n        /* \"#utility.yul\":2055:2058   */\n      dup3\n        /* \"#utility.yul\":1966:2059   */\n      tag_136\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":2084:2086   */\n      0x20\n        /* \"#utility.yul\":2079:2082   */\n      dup3\n        /* \"#utility.yul\":2075:2087   */\n      add\n        /* \"#utility.yul\":2068:2087   */\n      swap1\n      pop\n        /* \"#utility.yul\":1727:2093   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2099:2465   */\n    tag_137:\n        /* \"#utility.yul\":2241:2244   */\n      0x00\n        /* \"#utility.yul\":2262:2329   */\n      tag_139\n        /* \"#utility.yul\":2326:2328   */\n      0x29\n        /* \"#utility.yul\":2321:2324   */\n      dup4\n        /* \"#utility.yul\":2262:2329   */\n      tag_119\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":2255:2329   */\n      swap2\n      pop\n        /* \"#utility.yul\":2338:2431   */\n      tag_140\n        /* \"#utility.yul\":2427:2430   */\n      dup3\n        /* \"#utility.yul\":2338:2431   */\n      tag_141\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":2456:2458   */\n      0x40\n        /* \"#utility.yul\":2451:2454   */\n      dup3\n        /* \"#utility.yul\":2447:2459   */\n      add\n        /* \"#utility.yul\":2440:2459   */\n      swap1\n      pop\n        /* \"#utility.yul\":2099:2465   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2471:2693   */\n    tag_21:\n        /* \"#utility.yul\":2564:2568   */\n      0x00\n        /* \"#utility.yul\":2602:2604   */\n      0x20\n        /* \"#utility.yul\":2591:2600   */\n      dup3\n        /* \"#utility.yul\":2587:2605   */\n      add\n        /* \"#utility.yul\":2579:2605   */\n      swap1\n      pop\n        /* \"#utility.yul\":2615:2686   */\n      tag_143\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2672:2681   */\n      dup4\n        /* \"#utility.yul\":2668:2685   */\n      add\n        /* \"#utility.yul\":2659:2665   */\n      dup5\n        /* \"#utility.yul\":2615:2686   */\n      tag_112\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":2471:2693   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2699:3118   */\n    tag_89:\n        /* \"#utility.yul\":2865:2869   */\n      0x00\n        /* \"#utility.yul\":2903:2905   */\n      0x20\n        /* \"#utility.yul\":2892:2901   */\n      dup3\n        /* \"#utility.yul\":2888:2906   */\n      add\n        /* \"#utility.yul\":2880:2906   */\n      swap1\n      pop\n        /* \"#utility.yul\":2952:2961   */\n      dup2\n        /* \"#utility.yul\":2946:2950   */\n      dup2\n        /* \"#utility.yul\":2942:2962   */\n      sub\n        /* \"#utility.yul\":2938:2939   */\n      0x00\n        /* \"#utility.yul\":2927:2936   */\n      dup4\n        /* \"#utility.yul\":2923:2940   */\n      add\n        /* \"#utility.yul\":2916:2963   */\n      mstore\n        /* \"#utility.yul\":2980:3111   */\n      tag_145\n        /* \"#utility.yul\":3106:3110   */\n      dup2\n        /* \"#utility.yul\":2980:3111   */\n      tag_116\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":2972:3111   */\n      swap1\n      pop\n        /* \"#utility.yul\":2699:3118   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3124:3543   */\n    tag_76:\n        /* \"#utility.yul\":3290:3294   */\n      0x00\n        /* \"#utility.yul\":3328:3330   */\n      0x20\n        /* \"#utility.yul\":3317:3326   */\n      dup3\n        /* \"#utility.yul\":3313:3331   */\n      add\n        /* \"#utility.yul\":3305:3331   */\n      swap1\n      pop\n        /* \"#utility.yul\":3377:3386   */\n      dup2\n        /* \"#utility.yul\":3371:3375   */\n      dup2\n        /* \"#utility.yul\":3367:3387   */\n      sub\n        /* \"#utility.yul\":3363:3364   */\n      0x00\n        /* \"#utility.yul\":3352:3361   */\n      dup4\n        /* \"#utility.yul\":3348:3365   */\n      add\n        /* \"#utility.yul\":3341:3388   */\n      mstore\n        /* \"#utility.yul\":3405:3536   */\n      tag_147\n        /* \"#utility.yul\":3531:3535   */\n      dup2\n        /* \"#utility.yul\":3405:3536   */\n      tag_122\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":3397:3536   */\n      swap1\n      pop\n        /* \"#utility.yul\":3124:3543   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3549:3968   */\n    tag_98:\n        /* \"#utility.yul\":3715:3719   */\n      0x00\n        /* \"#utility.yul\":3753:3755   */\n      0x20\n        /* \"#utility.yul\":3742:3751   */\n      dup3\n        /* \"#utility.yul\":3738:3756   */\n      add\n        /* \"#utility.yul\":3730:3756   */\n      swap1\n      pop\n        /* \"#utility.yul\":3802:3811   */\n      dup2\n        /* \"#utility.yul\":3796:3800   */\n      dup2\n        /* \"#utility.yul\":3792:3812   */\n      sub\n        /* \"#utility.yul\":3788:3789   */\n      0x00\n        /* \"#utility.yul\":3777:3786   */\n      dup4\n        /* \"#utility.yul\":3773:3790   */\n      add\n        /* \"#utility.yul\":3766:3813   */\n      mstore\n        /* \"#utility.yul\":3830:3961   */\n      tag_149\n        /* \"#utility.yul\":3956:3960   */\n      dup2\n        /* \"#utility.yul\":3830:3961   */\n      tag_127\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":3822:3961   */\n      swap1\n      pop\n        /* \"#utility.yul\":3549:3968   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3974:4393   */\n    tag_50:\n        /* \"#utility.yul\":4140:4144   */\n      0x00\n        /* \"#utility.yul\":4178:4180   */\n      0x20\n        /* \"#utility.yul\":4167:4176   */\n      dup3\n        /* \"#utility.yul\":4163:4181   */\n      add\n        /* \"#utility.yul\":4155:4181   */\n      swap1\n      pop\n        /* \"#utility.yul\":4227:4236   */\n      dup2\n        /* \"#utility.yul\":4221:4225   */\n      dup2\n        /* \"#utility.yul\":4217:4237   */\n      sub\n        /* \"#utility.yul\":4213:4214   */\n      0x00\n        /* \"#utility.yul\":4202:4211   */\n      dup4\n        /* \"#utility.yul\":4198:4215   */\n      add\n        /* \"#utility.yul\":4191:4238   */\n      mstore\n        /* \"#utility.yul\":4255:4386   */\n      tag_151\n        /* \"#utility.yul\":4381:4385   */\n      dup2\n        /* \"#utility.yul\":4255:4386   */\n      tag_132\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":4247:4386   */\n      swap1\n      pop\n        /* \"#utility.yul\":3974:4393   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4399:4818   */\n    tag_80:\n        /* \"#utility.yul\":4565:4569   */\n      0x00\n        /* \"#utility.yul\":4603:4605   */\n      0x20\n        /* \"#utility.yul\":4592:4601   */\n      dup3\n        /* \"#utility.yul\":4588:4606   */\n      add\n        /* \"#utility.yul\":4580:4606   */\n      swap1\n      pop\n        /* \"#utility.yul\":4652:4661   */\n      dup2\n        /* \"#utility.yul\":4646:4650   */\n      dup2\n        /* \"#utility.yul\":4642:4662   */\n      sub\n        /* \"#utility.yul\":4638:4639   */\n      0x00\n        /* \"#utility.yul\":4627:4636   */\n      dup4\n        /* \"#utility.yul\":4623:4640   */\n      add\n        /* \"#utility.yul\":4616:4663   */\n      mstore\n        /* \"#utility.yul\":4680:4811   */\n      tag_153\n        /* \"#utility.yul\":4806:4810   */\n      dup2\n        /* \"#utility.yul\":4680:4811   */\n      tag_137\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":4672:4811   */\n      swap1\n      pop\n        /* \"#utility.yul\":4399:4818   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4905:5074   */\n    tag_119:\n        /* \"#utility.yul\":4989:5000   */\n      0x00\n        /* \"#utility.yul\":5023:5029   */\n      dup3\n        /* \"#utility.yul\":5018:5021   */\n      dup3\n        /* \"#utility.yul\":5011:5030   */\n      mstore\n        /* \"#utility.yul\":5063:5067   */\n      0x20\n        /* \"#utility.yul\":5058:5061   */\n      dup3\n        /* \"#utility.yul\":5054:5068   */\n      add\n        /* \"#utility.yul\":5039:5068   */\n      swap1\n      pop\n        /* \"#utility.yul\":4905:5074   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5080:5176   */\n    tag_115:\n        /* \"#utility.yul\":5117:5124   */\n      0x00\n        /* \"#utility.yul\":5146:5170   */\n      tag_158\n        /* \"#utility.yul\":5164:5169   */\n      dup3\n        /* \"#utility.yul\":5146:5170   */\n      tag_159\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":5135:5170   */\n      swap1\n      pop\n        /* \"#utility.yul\":5080:5176   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5182:5308   */\n    tag_159:\n        /* \"#utility.yul\":5219:5226   */\n      0x00\n        /* \"#utility.yul\":5259:5301   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":5252:5257   */\n      dup3\n        /* \"#utility.yul\":5248:5302   */\n      and\n        /* \"#utility.yul\":5237:5302   */\n      swap1\n      pop\n        /* \"#utility.yul\":5182:5308   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5437:5554   */\n    tag_110:\n        /* \"#utility.yul\":5546:5547   */\n      0x00\n        /* \"#utility.yul\":5543:5544   */\n      dup1\n        /* \"#utility.yul\":5536:5548   */\n      revert\n        /* \"#utility.yul\":5560:5785   */\n    tag_121:\n        /* \"#utility.yul\":5700:5734   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":5696:5697   */\n      0x00\n        /* \"#utility.yul\":5688:5694   */\n      dup3\n        /* \"#utility.yul\":5684:5698   */\n      add\n        /* \"#utility.yul\":5677:5735   */\n      mstore\n        /* \"#utility.yul\":5769:5777   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5764:5766   */\n      0x20\n        /* \"#utility.yul\":5756:5762   */\n      dup3\n        /* \"#utility.yul\":5752:5767   */\n      add\n        /* \"#utility.yul\":5745:5778   */\n      mstore\n        /* \"#utility.yul\":5560:5785   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5791:6018   */\n    tag_126:\n        /* \"#utility.yul\":5931:5965   */\n      0x5472616e736665722070726f7879206f776e65727368697020746f207a65726f\n        /* \"#utility.yul\":5927:5928   */\n      0x00\n        /* \"#utility.yul\":5919:5925   */\n      dup3\n        /* \"#utility.yul\":5915:5929   */\n      add\n        /* \"#utility.yul\":5908:5966   */\n      mstore\n        /* \"#utility.yul\":6000:6010   */\n      0x2061646472657373000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5995:5997   */\n      0x20\n        /* \"#utility.yul\":5987:5993   */\n      dup3\n        /* \"#utility.yul\":5983:5998   */\n      add\n        /* \"#utility.yul\":5976:6011   */\n      mstore\n        /* \"#utility.yul\":5791:6018   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6024:6206   */\n    tag_131:\n        /* \"#utility.yul\":6164:6198   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":6160:6161   */\n      0x00\n        /* \"#utility.yul\":6152:6158   */\n      dup3\n        /* \"#utility.yul\":6148:6162   */\n      add\n        /* \"#utility.yul\":6141:6199   */\n      mstore\n        /* \"#utility.yul\":6024:6206   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6212:6379   */\n    tag_136:\n        /* \"#utility.yul\":6352:6371   */\n      0x496d706c20616464726573732069732030000000000000000000000000000000\n        /* \"#utility.yul\":6348:6349   */\n      0x00\n        /* \"#utility.yul\":6340:6346   */\n      dup3\n        /* \"#utility.yul\":6336:6350   */\n      add\n        /* \"#utility.yul\":6329:6372   */\n      mstore\n        /* \"#utility.yul\":6212:6379   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6385:6613   */\n    tag_141:\n        /* \"#utility.yul\":6525:6559   */\n      0x5472616e736665722070726f7879206f776e65727368697020746f2063757272\n        /* \"#utility.yul\":6521:6522   */\n      0x00\n        /* \"#utility.yul\":6513:6519   */\n      dup3\n        /* \"#utility.yul\":6509:6523   */\n      add\n        /* \"#utility.yul\":6502:6560   */\n      mstore\n        /* \"#utility.yul\":6594:6605   */\n      0x656e74206f776e65720000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6589:6591   */\n      0x20\n        /* \"#utility.yul\":6581:6587   */\n      dup3\n        /* \"#utility.yul\":6577:6592   */\n      add\n        /* \"#utility.yul\":6570:6606   */\n      mstore\n        /* \"#utility.yul\":6385:6613   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6619:6741   */\n    tag_106:\n        /* \"#utility.yul\":6692:6716   */\n      tag_170\n        /* \"#utility.yul\":6710:6715   */\n      dup2\n        /* \"#utility.yul\":6692:6716   */\n      tag_115\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":6685:6690   */\n      dup2\n        /* \"#utility.yul\":6682:6717   */\n      eq\n        /* \"#utility.yul\":6672:6735   */\n      tag_171\n      jumpi\n        /* \"#utility.yul\":6731:6732   */\n      0x00\n        /* \"#utility.yul\":6728:6729   */\n      dup1\n        /* \"#utility.yul\":6721:6733   */\n      revert\n        /* \"#utility.yul\":6672:6735   */\n    tag_171:\n        /* \"#utility.yul\":6619:6741   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212200cbe86e8ca8ef968eca70a61b4a4354b17c5e4bfb7d974a193bac3456fe0f4f264736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_168": {
									"entryPoint": null,
									"id": 168,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_124": {
									"entryPoint": 65,
									"id": 124,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_setUpgradeabilityOwner_291": {
									"entryPoint": 269,
									"id": 291,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_111": {
									"entryPoint": 73,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061002d61002261004160201b60201c565b61004960201b60201c565b61003c3361010d60201b60201c565b610139565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60007f602d78baa5535dcda7f8b79e40e6339e355543a4727add9270060248e9f4191290508181555050565b610af3806101486000396000f3fe6080604052600436106100745760003560e01c8063715018a61161004e578063715018a6146101045780638da5cb5b1461011b578063f1739cae14610146578063f2fde38b1461016f5761007b565b8063025313a2146100855780633659cfe6146100b05780635c60da1b146100d95761007b565b3661007b57005b610083610198565b005b34801561009157600080fd5b5061009a61023f565b6040516100a79190610864565b60405180910390f35b3480156100bc57600080fd5b506100d760048036038101906100d29190610779565b61026d565b005b3480156100e557600080fd5b506100ee610341565b6040516100fb9190610864565b60405180910390f35b34801561011057600080fd5b5061011961036f565b005b34801561012757600080fd5b50610130610383565b60405161013d9190610864565b60405180910390f35b34801561015257600080fd5b5061016d60048036038101906101689190610779565b6103ac565b005b34801561017b57600080fd5b5061019660048036038101906101919190610779565b61053e565b005b60006101a2610341565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610214576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161020b906108df565b60405180910390fd5b60405136600082376000803683856127105a03f43d806000843e816000811461023b578184f35b8184fd5b6000807f602d78baa5535dcda7f8b79e40e6339e355543a4727add9270060248e9f419129050805491505090565b61027561023f565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102ac57600080fd5b60006102b6610341565b90508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156102f157600080fd5b6102fa826105c2565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a25050565b6000807f491fa9ff5dd08277a905cf36956e3786a257e6dfd0023908066c75c4559f86af9050805491505090565b6103776105ee565b610381600061066c565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6103b461023f565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103eb57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561045b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104529061089f565b60405180910390fd5b61046361023f565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156104d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c8906108ff565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166104f061023f565b73ffffffffffffffffffffffffffffffffffffffff167f5a3e66efaa1e445ebd894728a69d6959842ea1e97bd79b892797106e270efcd960405160405180910390a361053b81610730565b50565b6105466105ee565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156105b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ad9061087f565b60405180910390fd5b6105bf8161066c565b50565b60007f491fa9ff5dd08277a905cf36956e3786a257e6dfd0023908066c75c4559f86af90508181555050565b6105f661075c565b73ffffffffffffffffffffffffffffffffffffffff16610614610383565b73ffffffffffffffffffffffffffffffffffffffff161461066a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610661906108bf565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60007f602d78baa5535dcda7f8b79e40e6339e355543a4727add9270060248e9f4191290508181555050565b600033905090565b60008135905061077381610aa6565b92915050565b60006020828403121561078f5761078e610962565b5b600061079d84828501610764565b91505092915050565b6107af81610930565b82525050565b60006107c260268361091f565b91506107cd82610967565b604082019050919050565b60006107e560288361091f565b91506107f0826109b6565b604082019050919050565b600061080860208361091f565b915061081382610a05565b602082019050919050565b600061082b60118361091f565b915061083682610a2e565b602082019050919050565b600061084e60298361091f565b915061085982610a57565b604082019050919050565b600060208201905061087960008301846107a6565b92915050565b60006020820190508181036000830152610898816107b5565b9050919050565b600060208201905081810360008301526108b8816107d8565b9050919050565b600060208201905081810360008301526108d8816107fb565b9050919050565b600060208201905081810360008301526108f88161081e565b9050919050565b6000602082019050818103600083015261091881610841565b9050919050565b600082825260208201905092915050565b600061093b82610942565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f5472616e736665722070726f7879206f776e65727368697020746f207a65726f60008201527f2061646472657373000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f496d706c20616464726573732069732030000000000000000000000000000000600082015250565b7f5472616e736665722070726f7879206f776e65727368697020746f206375727260008201527f656e74206f776e65720000000000000000000000000000000000000000000000602082015250565b610aaf81610930565b8114610aba57600080fd5b5056fea26469706673582212200cbe86e8ca8ef968eca70a61b4a4354b17c5e4bfb7d974a193bac3456fe0f4f264736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D PUSH2 0x22 PUSH2 0x41 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x49 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x3C CALLER PUSH2 0x10D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x139 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x602D78BAA5535DCDA7F8B79E40E6339E355543A4727ADD9270060248E9F41912 SWAP1 POP DUP2 DUP2 SSTORE POP POP JUMP JUMPDEST PUSH2 0xAF3 DUP1 PUSH2 0x148 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x74 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0xF1739CAE EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x16F JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0x25313A2 EQ PUSH2 0x85 JUMPI DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0xB0 JUMPI DUP1 PUSH4 0x5C60DA1B EQ PUSH2 0xD9 JUMPI PUSH2 0x7B JUMP JUMPDEST CALLDATASIZE PUSH2 0x7B JUMPI STOP JUMPDEST PUSH2 0x83 PUSH2 0x198 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9A PUSH2 0x23F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA7 SWAP2 SWAP1 PUSH2 0x864 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD2 SWAP2 SWAP1 PUSH2 0x779 JUMP JUMPDEST PUSH2 0x26D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEE PUSH2 0x341 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x864 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x110 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x119 PUSH2 0x36F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x127 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x130 PUSH2 0x383 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13D SWAP2 SWAP1 PUSH2 0x864 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x152 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x779 JUMP JUMPDEST PUSH2 0x3AC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x196 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x191 SWAP2 SWAP1 PUSH2 0x779 JUMP JUMPDEST PUSH2 0x53E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH2 0x1A2 PUSH2 0x341 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x214 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20B SWAP1 PUSH2 0x8DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD CALLDATASIZE PUSH1 0x0 DUP3 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE DUP4 DUP6 PUSH2 0x2710 GAS SUB DELEGATECALL RETURNDATASIZE DUP1 PUSH1 0x0 DUP5 RETURNDATACOPY DUP2 PUSH1 0x0 DUP2 EQ PUSH2 0x23B JUMPI DUP2 DUP5 RETURN JUMPDEST DUP2 DUP5 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x602D78BAA5535DCDA7F8B79E40E6339E355543A4727ADD9270060248E9F41912 SWAP1 POP DUP1 SLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x275 PUSH2 0x23F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2B6 PUSH2 0x341 JUMP JUMPDEST SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2FA DUP3 PUSH2 0x5C2 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x491FA9FF5DD08277A905CF36956E3786A257E6DFD0023908066C75C4559F86AF SWAP1 POP DUP1 SLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x377 PUSH2 0x5EE JUMP JUMPDEST PUSH2 0x381 PUSH1 0x0 PUSH2 0x66C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x3B4 PUSH2 0x23F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x45B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x452 SWAP1 PUSH2 0x89F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x463 PUSH2 0x23F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x4D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C8 SWAP1 PUSH2 0x8FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4F0 PUSH2 0x23F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5A3E66EFAA1E445EBD894728A69D6959842EA1E97BD79B892797106E270EFCD9 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x53B DUP2 PUSH2 0x730 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x546 PUSH2 0x5EE JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x5B6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5AD SWAP1 PUSH2 0x87F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5BF DUP2 PUSH2 0x66C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x491FA9FF5DD08277A905CF36956E3786A257E6DFD0023908066C75C4559F86AF SWAP1 POP DUP2 DUP2 SSTORE POP POP JUMP JUMPDEST PUSH2 0x5F6 PUSH2 0x75C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x614 PUSH2 0x383 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x66A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x661 SWAP1 PUSH2 0x8BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x602D78BAA5535DCDA7F8B79E40E6339E355543A4727ADD9270060248E9F41912 SWAP1 POP DUP2 DUP2 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x773 DUP2 PUSH2 0xAA6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x78F JUMPI PUSH2 0x78E PUSH2 0x962 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x79D DUP5 DUP3 DUP6 ADD PUSH2 0x764 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7AF DUP2 PUSH2 0x930 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7C2 PUSH1 0x26 DUP4 PUSH2 0x91F JUMP JUMPDEST SWAP2 POP PUSH2 0x7CD DUP3 PUSH2 0x967 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7E5 PUSH1 0x28 DUP4 PUSH2 0x91F JUMP JUMPDEST SWAP2 POP PUSH2 0x7F0 DUP3 PUSH2 0x9B6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x808 PUSH1 0x20 DUP4 PUSH2 0x91F JUMP JUMPDEST SWAP2 POP PUSH2 0x813 DUP3 PUSH2 0xA05 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x82B PUSH1 0x11 DUP4 PUSH2 0x91F JUMP JUMPDEST SWAP2 POP PUSH2 0x836 DUP3 PUSH2 0xA2E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x84E PUSH1 0x29 DUP4 PUSH2 0x91F JUMP JUMPDEST SWAP2 POP PUSH2 0x859 DUP3 PUSH2 0xA57 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x879 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x7A6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x898 DUP2 PUSH2 0x7B5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x8B8 DUP2 PUSH2 0x7D8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x8D8 DUP2 PUSH2 0x7FB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x8F8 DUP2 PUSH2 0x81E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x918 DUP2 PUSH2 0x841 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x93B DUP3 PUSH2 0x942 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5472616E736665722070726F7879206F776E65727368697020746F207A65726F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x2061646472657373000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496D706C20616464726573732069732030000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5472616E736665722070726F7879206F776E65727368697020746F2063757272 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x656E74206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0xAAF DUP2 PUSH2 0x930 JUMP JUMPDEST DUP2 EQ PUSH2 0xABA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC 0xBE DUP7 0xE8 0xCA DUP15 0xF9 PUSH9 0xECA70A61B4A4354B17 0xC5 0xE4 0xBF 0xB7 0xD9 PUSH21 0xA193BAC3456FE0F4F264736F6C6343000807003300 ",
							"sourceMap": "116:3313:2:-:0;;;554:68;;;;;;;;;;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;579:35:2;603:10;579:23;;;:35;;:::i;:::-;116:3313;;640:96:1;693:7;719:10;712:17;;640:96;:::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;2380:199:2:-;2457:16;324:46;2457:37;;2546:14;2536:8;2529:32;2514:58;2380:199;:::o;116:3313::-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_318": {
									"entryPoint": null,
									"id": 318,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_322": {
									"entryPoint": null,
									"id": 322,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_54": {
									"entryPoint": 1518,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_delegatecall_311": {
									"entryPoint": 408,
									"id": 311,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_124": {
									"entryPoint": 1884,
									"id": 124,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_setImplementation_280": {
									"entryPoint": 1474,
									"id": 280,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setUpgradeabilityOwner_291": {
									"entryPoint": 1840,
									"id": 291,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_111": {
									"entryPoint": 1644,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@implementation_204": {
									"entryPoint": 833,
									"id": 204,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_40": {
									"entryPoint": 899,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@proxyOwner_192": {
									"entryPoint": 575,
									"id": 192,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_68": {
									"entryPoint": 879,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_91": {
									"entryPoint": 1342,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferProxyOwnership_241": {
									"entryPoint": 940,
									"id": 241,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@upgradeTo_269": {
									"entryPoint": 621,
									"id": 269,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1892,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1913,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1958,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1973,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6acad32379028ef53b5b35d624f19ef2620f58d5c00336e523778e34a911be9b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2008,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2043,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e952cc2cc11bced53e8d523370fdcc894adc9adccec71bcd9abffe00d6f88c9f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2078,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f1a64dfdae2c8f7217ae38bfe90a69edee14854d06f4671e94d5b4f13f67ecf1_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2113,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2148,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2175,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6acad32379028ef53b5b35d624f19ef2620f58d5c00336e523778e34a911be9b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2207,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2239,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e952cc2cc11bced53e8d523370fdcc894adc9adccec71bcd9abffe00d6f88c9f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2271,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f1a64dfdae2c8f7217ae38bfe90a69edee14854d06f4671e94d5b4f13f67ecf1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2303,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2335,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2352,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2370,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2402,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 2407,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_6acad32379028ef53b5b35d624f19ef2620f58d5c00336e523778e34a911be9b": {
									"entryPoint": 2486,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 2565,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e952cc2cc11bced53e8d523370fdcc894adc9adccec71bcd9abffe00d6f88c9f": {
									"entryPoint": 2606,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f1a64dfdae2c8f7217ae38bfe90a69edee14854d06f4671e94d5b4f13f67ecf1": {
									"entryPoint": 2647,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2726,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:6744:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:3",
														"type": ""
													}
												],
												"src": "7:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "218:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "264:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "266:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "266:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "266:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "239:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "248:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "235:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "260:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "231:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:32:3"
															},
															"nodeType": "YulIf",
															"src": "228:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "357:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "372:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "386:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "376:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "401:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "436:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "447:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "432:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "432:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "456:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "411:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "401:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "188:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "199:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "211:6:3",
														"type": ""
													}
												],
												"src": "152:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "552:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "569:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "592:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "574:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "574:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "562:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "562:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "562:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "540:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "547:3:3",
														"type": ""
													}
												],
												"src": "487:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "757:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "767:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "833:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "838:2:3",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "774:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "774:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "767:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "939:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "850:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "850:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "850:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "952:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "963:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "968:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "959:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "959:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "952:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "745:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "753:3:3",
														"type": ""
													}
												],
												"src": "611:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1129:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1139:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1205:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1210:2:3",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1146:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1146:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1139:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1311:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6acad32379028ef53b5b35d624f19ef2620f58d5c00336e523778e34a911be9b",
																	"nodeType": "YulIdentifier",
																	"src": "1222:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1222:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1222:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1324:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1335:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1340:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1331:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1331:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1324:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6acad32379028ef53b5b35d624f19ef2620f58d5c00336e523778e34a911be9b_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1117:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1125:3:3",
														"type": ""
													}
												],
												"src": "983:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1501:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1511:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1577:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1582:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1518:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1518:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1511:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1683:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "1594:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1594:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1594:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1696:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1707:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1712:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1703:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1703:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1696:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1489:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1497:3:3",
														"type": ""
													}
												],
												"src": "1355:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1873:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1883:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1949:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1954:2:3",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1890:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1890:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1883:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2055:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e952cc2cc11bced53e8d523370fdcc894adc9adccec71bcd9abffe00d6f88c9f",
																	"nodeType": "YulIdentifier",
																	"src": "1966:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1966:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1966:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2068:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2079:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2084:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2075:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2075:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2068:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e952cc2cc11bced53e8d523370fdcc894adc9adccec71bcd9abffe00d6f88c9f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1861:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1869:3:3",
														"type": ""
													}
												],
												"src": "1727:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2245:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2255:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2321:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2326:2:3",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2262:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2262:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2255:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2427:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f1a64dfdae2c8f7217ae38bfe90a69edee14854d06f4671e94d5b4f13f67ecf1",
																	"nodeType": "YulIdentifier",
																	"src": "2338:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2338:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2338:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2440:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2451:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2456:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2447:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2447:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2440:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f1a64dfdae2c8f7217ae38bfe90a69edee14854d06f4671e94d5b4f13f67ecf1_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2233:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2241:3:3",
														"type": ""
													}
												],
												"src": "2099:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2569:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2579:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2591:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2602:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2587:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2587:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2579:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2659:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2672:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2683:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2668:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2668:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2615:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2615:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2615:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2541:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2553:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2564:4:3",
														"type": ""
													}
												],
												"src": "2471:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2870:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2880:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2892:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2903:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2888:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2888:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2880:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2927:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2938:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2923:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2923:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2946:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2952:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2942:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2942:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2916:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2916:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2916:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2972:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3106:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2980:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2980:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2972:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2850:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2865:4:3",
														"type": ""
													}
												],
												"src": "2699:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3295:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3305:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3317:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3328:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3313:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3313:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3305:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3352:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3363:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3348:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3348:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3371:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3377:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3367:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3367:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3341:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3341:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3341:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3397:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3531:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6acad32379028ef53b5b35d624f19ef2620f58d5c00336e523778e34a911be9b_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3405:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3405:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3397:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6acad32379028ef53b5b35d624f19ef2620f58d5c00336e523778e34a911be9b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3275:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3290:4:3",
														"type": ""
													}
												],
												"src": "3124:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3720:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3730:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3742:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3753:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3738:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3738:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3730:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3777:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3788:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3773:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3773:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3796:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3802:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3792:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3792:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3766:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3766:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3766:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3822:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3956:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3830:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3830:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3822:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3700:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3715:4:3",
														"type": ""
													}
												],
												"src": "3549:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4145:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4155:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4167:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4178:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4163:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4163:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4155:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4202:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4213:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4198:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4198:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4221:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4227:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4217:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4217:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4191:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4191:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4191:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4247:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4381:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e952cc2cc11bced53e8d523370fdcc894adc9adccec71bcd9abffe00d6f88c9f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4255:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4255:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4247:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e952cc2cc11bced53e8d523370fdcc894adc9adccec71bcd9abffe00d6f88c9f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4125:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4140:4:3",
														"type": ""
													}
												],
												"src": "3974:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4570:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4580:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4592:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4603:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4588:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4588:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4580:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4627:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4638:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4623:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4623:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4646:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4652:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4642:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4642:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4616:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4616:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4616:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4672:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4806:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f1a64dfdae2c8f7217ae38bfe90a69edee14854d06f4671e94d5b4f13f67ecf1_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4680:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4680:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4672:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f1a64dfdae2c8f7217ae38bfe90a69edee14854d06f4671e94d5b4f13f67ecf1__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4550:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4565:4:3",
														"type": ""
													}
												],
												"src": "4399:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4864:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4874:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4890:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4884:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4884:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "4874:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4857:6:3",
														"type": ""
													}
												],
												"src": "4824:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5001:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5018:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5023:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5011:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5011:19:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5011:19:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5039:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5058:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5063:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5054:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5054:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "5039:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4973:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4978:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "4989:11:3",
														"type": ""
													}
												],
												"src": "4905:169:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5125:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5135:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5164:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "5146:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5146:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5135:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5107:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5117:7:3",
														"type": ""
													}
												],
												"src": "5080:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5227:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5237:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5252:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5259:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5248:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5248:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5237:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5209:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5219:7:3",
														"type": ""
													}
												],
												"src": "5182:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5403:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5420:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5423:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5413:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5413:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5413:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "5314:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5526:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5543:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5546:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5536:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5536:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5536:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "5437:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5666:119:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5688:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5696:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5684:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5684:14:3"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5700:34:3",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5677:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5677:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5677:58:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5756:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5764:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5752:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5752:15:3"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5769:8:3",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5745:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5745:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5745:33:3"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5658:6:3",
														"type": ""
													}
												],
												"src": "5560:225:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5897:121:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5919:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5927:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5915:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5915:14:3"
																	},
																	{
																		"hexValue": "5472616e736665722070726f7879206f776e65727368697020746f207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5931:34:3",
																		"type": "",
																		"value": "Transfer proxy ownership to zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5908:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5908:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5908:58:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5987:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5995:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5983:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5983:15:3"
																	},
																	{
																		"hexValue": "2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6000:10:3",
																		"type": "",
																		"value": " address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5976:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5976:35:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5976:35:3"
														}
													]
												},
												"name": "store_literal_in_memory_6acad32379028ef53b5b35d624f19ef2620f58d5c00336e523778e34a911be9b",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5889:6:3",
														"type": ""
													}
												],
												"src": "5791:227:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6130:76:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6152:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6160:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6148:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6148:14:3"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6164:34:3",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6141:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6141:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6141:58:3"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6122:6:3",
														"type": ""
													}
												],
												"src": "6024:182:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6318:61:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6340:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6348:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6336:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6336:14:3"
																	},
																	{
																		"hexValue": "496d706c20616464726573732069732030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6352:19:3",
																		"type": "",
																		"value": "Impl address is 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6329:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6329:43:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6329:43:3"
														}
													]
												},
												"name": "store_literal_in_memory_e952cc2cc11bced53e8d523370fdcc894adc9adccec71bcd9abffe00d6f88c9f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6310:6:3",
														"type": ""
													}
												],
												"src": "6212:167:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6491:122:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6513:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6521:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6509:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6509:14:3"
																	},
																	{
																		"hexValue": "5472616e736665722070726f7879206f776e65727368697020746f2063757272",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6525:34:3",
																		"type": "",
																		"value": "Transfer proxy ownership to curr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6502:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6502:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6502:58:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6581:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6589:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6577:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6577:15:3"
																	},
																	{
																		"hexValue": "656e74206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6594:11:3",
																		"type": "",
																		"value": "ent owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6570:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6570:36:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6570:36:3"
														}
													]
												},
												"name": "store_literal_in_memory_f1a64dfdae2c8f7217ae38bfe90a69edee14854d06f4671e94d5b4f13f67ecf1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6483:6:3",
														"type": ""
													}
												],
												"src": "6385:228:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6662:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6719:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6728:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6731:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6721:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6721:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6721:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6685:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6710:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "6692:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6692:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6682:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6682:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6675:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6675:43:3"
															},
															"nodeType": "YulIf",
															"src": "6672:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6655:5:3",
														"type": ""
													}
												],
												"src": "6619:122:3"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_6acad32379028ef53b5b35d624f19ef2620f58d5c00336e523778e34a911be9b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_6acad32379028ef53b5b35d624f19ef2620f58d5c00336e523778e34a911be9b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_e952cc2cc11bced53e8d523370fdcc894adc9adccec71bcd9abffe00d6f88c9f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_e952cc2cc11bced53e8d523370fdcc894adc9adccec71bcd9abffe00d6f88c9f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_f1a64dfdae2c8f7217ae38bfe90a69edee14854d06f4671e94d5b4f13f67ecf1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_f1a64dfdae2c8f7217ae38bfe90a69edee14854d06f4671e94d5b4f13f67ecf1(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_6acad32379028ef53b5b35d624f19ef2620f58d5c00336e523778e34a911be9b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6acad32379028ef53b5b35d624f19ef2620f58d5c00336e523778e34a911be9b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_e952cc2cc11bced53e8d523370fdcc894adc9adccec71bcd9abffe00d6f88c9f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e952cc2cc11bced53e8d523370fdcc894adc9adccec71bcd9abffe00d6f88c9f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_f1a64dfdae2c8f7217ae38bfe90a69edee14854d06f4671e94d5b4f13f67ecf1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f1a64dfdae2c8f7217ae38bfe90a69edee14854d06f4671e94d5b4f13f67ecf1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_6acad32379028ef53b5b35d624f19ef2620f58d5c00336e523778e34a911be9b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer proxy ownership to zero\")\n\n        mstore(add(memPtr, 32), \" address\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function store_literal_in_memory_e952cc2cc11bced53e8d523370fdcc894adc9adccec71bcd9abffe00d6f88c9f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Impl address is 0\")\n\n    }\n\n    function store_literal_in_memory_f1a64dfdae2c8f7217ae38bfe90a69edee14854d06f4671e94d5b4f13f67ecf1(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer proxy ownership to curr\")\n\n        mstore(add(memPtr, 32), \"ent owner\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100745760003560e01c8063715018a61161004e578063715018a6146101045780638da5cb5b1461011b578063f1739cae14610146578063f2fde38b1461016f5761007b565b8063025313a2146100855780633659cfe6146100b05780635c60da1b146100d95761007b565b3661007b57005b610083610198565b005b34801561009157600080fd5b5061009a61023f565b6040516100a79190610864565b60405180910390f35b3480156100bc57600080fd5b506100d760048036038101906100d29190610779565b61026d565b005b3480156100e557600080fd5b506100ee610341565b6040516100fb9190610864565b60405180910390f35b34801561011057600080fd5b5061011961036f565b005b34801561012757600080fd5b50610130610383565b60405161013d9190610864565b60405180910390f35b34801561015257600080fd5b5061016d60048036038101906101689190610779565b6103ac565b005b34801561017b57600080fd5b5061019660048036038101906101919190610779565b61053e565b005b60006101a2610341565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610214576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161020b906108df565b60405180910390fd5b60405136600082376000803683856127105a03f43d806000843e816000811461023b578184f35b8184fd5b6000807f602d78baa5535dcda7f8b79e40e6339e355543a4727add9270060248e9f419129050805491505090565b61027561023f565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102ac57600080fd5b60006102b6610341565b90508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156102f157600080fd5b6102fa826105c2565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a25050565b6000807f491fa9ff5dd08277a905cf36956e3786a257e6dfd0023908066c75c4559f86af9050805491505090565b6103776105ee565b610381600061066c565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6103b461023f565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103eb57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561045b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104529061089f565b60405180910390fd5b61046361023f565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156104d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c8906108ff565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166104f061023f565b73ffffffffffffffffffffffffffffffffffffffff167f5a3e66efaa1e445ebd894728a69d6959842ea1e97bd79b892797106e270efcd960405160405180910390a361053b81610730565b50565b6105466105ee565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156105b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ad9061087f565b60405180910390fd5b6105bf8161066c565b50565b60007f491fa9ff5dd08277a905cf36956e3786a257e6dfd0023908066c75c4559f86af90508181555050565b6105f661075c565b73ffffffffffffffffffffffffffffffffffffffff16610614610383565b73ffffffffffffffffffffffffffffffffffffffff161461066a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610661906108bf565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60007f602d78baa5535dcda7f8b79e40e6339e355543a4727add9270060248e9f4191290508181555050565b600033905090565b60008135905061077381610aa6565b92915050565b60006020828403121561078f5761078e610962565b5b600061079d84828501610764565b91505092915050565b6107af81610930565b82525050565b60006107c260268361091f565b91506107cd82610967565b604082019050919050565b60006107e560288361091f565b91506107f0826109b6565b604082019050919050565b600061080860208361091f565b915061081382610a05565b602082019050919050565b600061082b60118361091f565b915061083682610a2e565b602082019050919050565b600061084e60298361091f565b915061085982610a57565b604082019050919050565b600060208201905061087960008301846107a6565b92915050565b60006020820190508181036000830152610898816107b5565b9050919050565b600060208201905081810360008301526108b8816107d8565b9050919050565b600060208201905081810360008301526108d8816107fb565b9050919050565b600060208201905081810360008301526108f88161081e565b9050919050565b6000602082019050818103600083015261091881610841565b9050919050565b600082825260208201905092915050565b600061093b82610942565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f5472616e736665722070726f7879206f776e65727368697020746f207a65726f60008201527f2061646472657373000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f496d706c20616464726573732069732030000000000000000000000000000000600082015250565b7f5472616e736665722070726f7879206f776e65727368697020746f206375727260008201527f656e74206f776e65720000000000000000000000000000000000000000000000602082015250565b610aaf81610930565b8114610aba57600080fd5b5056fea26469706673582212200cbe86e8ca8ef968eca70a61b4a4354b17c5e4bfb7d974a193bac3456fe0f4f264736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x74 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0xF1739CAE EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x16F JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0x25313A2 EQ PUSH2 0x85 JUMPI DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0xB0 JUMPI DUP1 PUSH4 0x5C60DA1B EQ PUSH2 0xD9 JUMPI PUSH2 0x7B JUMP JUMPDEST CALLDATASIZE PUSH2 0x7B JUMPI STOP JUMPDEST PUSH2 0x83 PUSH2 0x198 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9A PUSH2 0x23F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA7 SWAP2 SWAP1 PUSH2 0x864 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD2 SWAP2 SWAP1 PUSH2 0x779 JUMP JUMPDEST PUSH2 0x26D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEE PUSH2 0x341 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x864 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x110 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x119 PUSH2 0x36F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x127 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x130 PUSH2 0x383 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13D SWAP2 SWAP1 PUSH2 0x864 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x152 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x779 JUMP JUMPDEST PUSH2 0x3AC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x196 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x191 SWAP2 SWAP1 PUSH2 0x779 JUMP JUMPDEST PUSH2 0x53E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH2 0x1A2 PUSH2 0x341 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x214 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20B SWAP1 PUSH2 0x8DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD CALLDATASIZE PUSH1 0x0 DUP3 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE DUP4 DUP6 PUSH2 0x2710 GAS SUB DELEGATECALL RETURNDATASIZE DUP1 PUSH1 0x0 DUP5 RETURNDATACOPY DUP2 PUSH1 0x0 DUP2 EQ PUSH2 0x23B JUMPI DUP2 DUP5 RETURN JUMPDEST DUP2 DUP5 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x602D78BAA5535DCDA7F8B79E40E6339E355543A4727ADD9270060248E9F41912 SWAP1 POP DUP1 SLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x275 PUSH2 0x23F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2B6 PUSH2 0x341 JUMP JUMPDEST SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2FA DUP3 PUSH2 0x5C2 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x491FA9FF5DD08277A905CF36956E3786A257E6DFD0023908066C75C4559F86AF SWAP1 POP DUP1 SLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x377 PUSH2 0x5EE JUMP JUMPDEST PUSH2 0x381 PUSH1 0x0 PUSH2 0x66C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x3B4 PUSH2 0x23F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x45B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x452 SWAP1 PUSH2 0x89F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x463 PUSH2 0x23F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x4D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C8 SWAP1 PUSH2 0x8FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4F0 PUSH2 0x23F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5A3E66EFAA1E445EBD894728A69D6959842EA1E97BD79B892797106E270EFCD9 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x53B DUP2 PUSH2 0x730 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x546 PUSH2 0x5EE JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x5B6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5AD SWAP1 PUSH2 0x87F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5BF DUP2 PUSH2 0x66C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x491FA9FF5DD08277A905CF36956E3786A257E6DFD0023908066C75C4559F86AF SWAP1 POP DUP2 DUP2 SSTORE POP POP JUMP JUMPDEST PUSH2 0x5F6 PUSH2 0x75C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x614 PUSH2 0x383 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x66A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x661 SWAP1 PUSH2 0x8BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x602D78BAA5535DCDA7F8B79E40E6339E355543A4727ADD9270060248E9F41912 SWAP1 POP DUP2 DUP2 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x773 DUP2 PUSH2 0xAA6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x78F JUMPI PUSH2 0x78E PUSH2 0x962 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x79D DUP5 DUP3 DUP6 ADD PUSH2 0x764 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7AF DUP2 PUSH2 0x930 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7C2 PUSH1 0x26 DUP4 PUSH2 0x91F JUMP JUMPDEST SWAP2 POP PUSH2 0x7CD DUP3 PUSH2 0x967 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7E5 PUSH1 0x28 DUP4 PUSH2 0x91F JUMP JUMPDEST SWAP2 POP PUSH2 0x7F0 DUP3 PUSH2 0x9B6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x808 PUSH1 0x20 DUP4 PUSH2 0x91F JUMP JUMPDEST SWAP2 POP PUSH2 0x813 DUP3 PUSH2 0xA05 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x82B PUSH1 0x11 DUP4 PUSH2 0x91F JUMP JUMPDEST SWAP2 POP PUSH2 0x836 DUP3 PUSH2 0xA2E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x84E PUSH1 0x29 DUP4 PUSH2 0x91F JUMP JUMPDEST SWAP2 POP PUSH2 0x859 DUP3 PUSH2 0xA57 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x879 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x7A6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x898 DUP2 PUSH2 0x7B5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x8B8 DUP2 PUSH2 0x7D8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x8D8 DUP2 PUSH2 0x7FB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x8F8 DUP2 PUSH2 0x81E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x918 DUP2 PUSH2 0x841 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x93B DUP3 PUSH2 0x942 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5472616E736665722070726F7879206F776E65727368697020746F207A65726F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x2061646472657373000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496D706C20616464726573732069732030000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5472616E736665722070726F7879206F776E65727368697020746F2063757272 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x656E74206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0xAAF DUP2 PUSH2 0x930 JUMP JUMPDEST DUP2 EQ PUSH2 0xABA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC 0xBE DUP7 0xE8 0xCA DUP15 0xF9 PUSH9 0xECA70A61B4A4354B17 0xC5 0xE4 0xBF 0xB7 0xD9 PUSH21 0xA193BAC3456FE0F4F264736F6C6343000807003300 ",
							"sourceMap": "116:3313:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3366:15;:13;:15::i;:::-;116:3313;810:183;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1866:292;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1073:189;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1831:101:0;;;;;;;;;;;;;:::i;:::-;;1201:85;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1343:443:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2081:198:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2587:732:2;2632:13;2648:16;:14;:16::i;:::-;2632:32;;2700:1;2683:19;;:5;:19;;;;2675:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;2778:4;2772:11;2818:14;2815:1;2810:3;2797:36;3027:1;3007;2974:14;2952:3;2928:5;2903;2896;2892:17;2861:182;3069:16;3122:4;3119:1;3114:3;3099:28;3150:6;3175:1;3170:58;;;;3281:4;3276:3;3269:17;3170:58;3208:4;3203:3;3196:17;810:183;853:13;879:16;324:46;879:37;;966:8;960:15;951:24;;936:50;810:183;:::o;1866:292::-;689:12;:10;:12::i;:::-;675:26;;:10;:26;;;667:35;;;;;;1946:29:::1;1978:16;:14;:16::i;:::-;1946:48;;2038:18;2013:43;;:21;:43;;;;2005:52;;;::::0;::::1;;2068:38;2087:18;2068;:38::i;:::-;2131:18;2122:28;;;;;;;;;;;;1935:223;1866:292:::0;:::o;1073:189::-;1120:12;1145:16;207:55;1145:41;;1235:8;1229:15;1221:23;;1206:49;1073:189;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;1201:85::-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;1343:443:2:-;689:12;:10;:12::i;:::-;675:26;;:10;:26;;;667:35;;;;;;1470:1:::1;1449:23;;:9;:23;;;;1427:113;;;;;;;;;;;;:::i;:::-;;;;;;;;;1586:12;:10;:12::i;:::-;1573:25;;:9;:25;;;;1551:116;;;;;;;;;;;;:::i;:::-;;;;;;;;;1723:9;1683:50;;1709:12;:10;:12::i;:::-;1683:50;;;;;;;;;;;;1744:34;1768:9;1744:23;:34::i;:::-;1343:443:::0;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;;;2161:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;2166:206:2:-;2242:16;207:55;2242:41;;2335:18;2325:8;2318:36;2303:62;2166:206;:::o;1359:130:0:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2433:187::-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;2380:199:2:-;2457:16;324:46;2457:37;;2546:14;2536:8;2529:32;2514:58;2380:199;:::o;640:96:1:-;693:7;719:10;712:17;;640:96;:::o;7:139:3:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:329::-;211:6;260:2;248:9;239:7;235:23;231:32;228:119;;;266:79;;:::i;:::-;228:119;386:1;411:53;456:7;447:6;436:9;432:22;411:53;:::i;:::-;401:63;;357:117;152:329;;;;:::o;487:118::-;574:24;592:5;574:24;:::i;:::-;569:3;562:37;487:118;;:::o;611:366::-;753:3;774:67;838:2;833:3;774:67;:::i;:::-;767:74;;850:93;939:3;850:93;:::i;:::-;968:2;963:3;959:12;952:19;;611:366;;;:::o;983:::-;1125:3;1146:67;1210:2;1205:3;1146:67;:::i;:::-;1139:74;;1222:93;1311:3;1222:93;:::i;:::-;1340:2;1335:3;1331:12;1324:19;;983:366;;;:::o;1355:::-;1497:3;1518:67;1582:2;1577:3;1518:67;:::i;:::-;1511:74;;1594:93;1683:3;1594:93;:::i;:::-;1712:2;1707:3;1703:12;1696:19;;1355:366;;;:::o;1727:::-;1869:3;1890:67;1954:2;1949:3;1890:67;:::i;:::-;1883:74;;1966:93;2055:3;1966:93;:::i;:::-;2084:2;2079:3;2075:12;2068:19;;1727:366;;;:::o;2099:::-;2241:3;2262:67;2326:2;2321:3;2262:67;:::i;:::-;2255:74;;2338:93;2427:3;2338:93;:::i;:::-;2456:2;2451:3;2447:12;2440:19;;2099:366;;;:::o;2471:222::-;2564:4;2602:2;2591:9;2587:18;2579:26;;2615:71;2683:1;2672:9;2668:17;2659:6;2615:71;:::i;:::-;2471:222;;;;:::o;2699:419::-;2865:4;2903:2;2892:9;2888:18;2880:26;;2952:9;2946:4;2942:20;2938:1;2927:9;2923:17;2916:47;2980:131;3106:4;2980:131;:::i;:::-;2972:139;;2699:419;;;:::o;3124:::-;3290:4;3328:2;3317:9;3313:18;3305:26;;3377:9;3371:4;3367:20;3363:1;3352:9;3348:17;3341:47;3405:131;3531:4;3405:131;:::i;:::-;3397:139;;3124:419;;;:::o;3549:::-;3715:4;3753:2;3742:9;3738:18;3730:26;;3802:9;3796:4;3792:20;3788:1;3777:9;3773:17;3766:47;3830:131;3956:4;3830:131;:::i;:::-;3822:139;;3549:419;;;:::o;3974:::-;4140:4;4178:2;4167:9;4163:18;4155:26;;4227:9;4221:4;4217:20;4213:1;4202:9;4198:17;4191:47;4255:131;4381:4;4255:131;:::i;:::-;4247:139;;3974:419;;;:::o;4399:::-;4565:4;4603:2;4592:9;4588:18;4580:26;;4652:9;4646:4;4642:20;4638:1;4627:9;4623:17;4616:47;4680:131;4806:4;4680:131;:::i;:::-;4672:139;;4399:419;;;:::o;4905:169::-;4989:11;5023:6;5018:3;5011:19;5063:4;5058:3;5054:14;5039:29;;4905:169;;;;:::o;5080:96::-;5117:7;5146:24;5164:5;5146:24;:::i;:::-;5135:35;;5080:96;;;:::o;5182:126::-;5219:7;5259:42;5252:5;5248:54;5237:65;;5182:126;;;:::o;5437:117::-;5546:1;5543;5536:12;5560:225;5700:34;5696:1;5688:6;5684:14;5677:58;5769:8;5764:2;5756:6;5752:15;5745:33;5560:225;:::o;5791:227::-;5931:34;5927:1;5919:6;5915:14;5908:58;6000:10;5995:2;5987:6;5983:15;5976:35;5791:227;:::o;6024:182::-;6164:34;6160:1;6152:6;6148:14;6141:58;6024:182;:::o;6212:167::-;6352:19;6348:1;6340:6;6336:14;6329:43;6212:167;:::o;6385:228::-;6525:34;6521:1;6513:6;6509:14;6502:58;6594:11;6589:2;6581:6;6577:15;6570:36;6385:228;:::o;6619:122::-;6692:24;6710:5;6692:24;:::i;:::-;6685:5;6682:35;6672:63;;6731:1;6728;6721:12;6672:63;6619:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "560600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "infinite",
								"implementation()": "2544",
								"owner()": "2544",
								"proxyOwner()": "2500",
								"renounceOwnership()": "30398",
								"transferOwnership(address)": "30813",
								"transferProxyOwnership(address)": "infinite",
								"upgradeTo(address)": "28168"
							},
							"internal": {
								"_delegatecall()": "infinite",
								"_setImplementation(address)": "22130",
								"_setUpgradeabilityOwner(address)": "22130"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 116,
									"end": 3429,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 116,
									"end": 3429,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 116,
									"end": 3429,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 554,
									"end": 622,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 554,
									"end": 622,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 554,
									"end": 622,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 554,
									"end": 622,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 554,
									"end": 622,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 554,
									"end": 622,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 554,
									"end": 622,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 554,
									"end": 622,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 554,
									"end": 622,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 554,
									"end": 622,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 554,
									"end": 622,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 579,
									"end": 614,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 603,
									"end": 613,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 579,
									"end": 602,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 579,
									"end": 602,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 579,
									"end": 602,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 579,
									"end": 614,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 579,
									"end": 614,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 579,
									"end": 614,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 579,
									"end": 614,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 579,
									"end": 614,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 116,
									"end": 3429,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 116,
									"end": 3429,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2550,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2604,
									"end": 2612,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2594,
									"end": 2602,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2496,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 2380,
									"end": 2579,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 2380,
									"end": 2579,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2457,
									"end": 2473,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 324,
									"end": 370,
									"name": "PUSH",
									"source": 2,
									"value": "602D78BAA5535DCDA7F8B79E40E6339E355543A4727ADD9270060248E9F41912"
								},
								{
									"begin": 2457,
									"end": 2494,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2457,
									"end": 2494,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2546,
									"end": 2560,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2536,
									"end": 2544,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2529,
									"end": 2561,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 2514,
									"end": 2572,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2380,
									"end": 2579,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2380,
									"end": 2579,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 116,
									"end": 3429,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 116,
									"end": 3429,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 116,
									"end": 3429,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 116,
									"end": 3429,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 116,
									"end": 3429,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 116,
									"end": 3429,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 116,
									"end": 3429,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 116,
									"end": 3429,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 116,
									"end": 3429,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200cbe86e8ca8ef968eca70a61b4a4354b17c5e4bfb7d974a193bac3456fe0f4f264736f6c63430008070033",
									".code": [
										{
											"begin": 116,
											"end": 3429,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 116,
											"end": 3429,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 116,
											"end": 3429,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 116,
											"end": 3429,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 116,
											"end": 3429,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 116,
											"end": 3429,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 116,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 116,
											"end": 3429,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 116,
											"end": 3429,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 116,
											"end": 3429,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 116,
											"end": 3429,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 116,
											"end": 3429,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 116,
											"end": 3429,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 116,
											"end": 3429,
											"name": "PUSH",
											"source": 2,
											"value": "715018A6"
										},
										{
											"begin": 116,
											"end": 3429,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 116,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 116,
											"end": 3429,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 116,
											"end": 3429,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 116,
											"end": 3429,
											"name": "PUSH",
											"source": 2,
											"value": "715018A6"
										},
										{
											"begin": 116,
											"end": 3429,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 116,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 116,
											"end": 3429,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 116,
											"end": 3429,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 116,
											"end": 3429,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 116,
											"end": 3429,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 116,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 116,
											"end": 3429,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 116,
											"end": 3429,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 116,
											"end": 3429,
											"name": "PUSH",
											"source": 2,
											"value": "F1739CAE"
										},
										{
											"begin": 116,
											"end": 3429,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 116,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 116,
											"end": 3429,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 116,
											"end": 3429,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 116,
											"end": 3429,
											"name": "PUSH",
											"source": 2,
											"value": "F2FDE38B"
										},
										{
											"begin": 116,
											"end": 3429,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 116,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 116,
											"end": 3429,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 116,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 116,
											"end": 3429,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 116,
											"end": 3429,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 116,
											"end": 3429,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 116,
											"end": 3429,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 116,
											"end": 3429,
											"name": "PUSH",
											"source": 2,
											"value": "25313A2"
										},
										{
											"begin": 116,
											"end": 3429,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 116,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 116,
											"end": 3429,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 116,
											"end": 3429,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 116,
											"end": 3429,
											"name": "PUSH",
											"source": 2,
											"value": "3659CFE6"
										},
										{
											"begin": 116,
											"end": 3429,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 116,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 116,
											"end": 3429,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 116,
											"end": 3429,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 116,
											"end": 3429,
											"name": "PUSH",
											"source": 2,
											"value": "5C60DA1B"
										},
										{
											"begin": 116,
											"end": 3429,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 116,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 116,
											"end": 3429,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 116,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 116,
											"end": 3429,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 116,
											"end": 3429,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 116,
											"end": 3429,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 116,
											"end": 3429,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 116,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 116,
											"end": 3429,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 116,
											"end": 3429,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 116,
											"end": 3429,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 116,
											"end": 3429,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3366,
											"end": 3381,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 3366,
											"end": 3379,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 3366,
											"end": 3381,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3366,
											"end": 3381,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 3366,
											"end": 3381,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 116,
											"end": 3429,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 810,
											"end": 993,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 810,
											"end": 993,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 810,
											"end": 993,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 810,
											"end": 993,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 810,
											"end": 993,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 810,
											"end": 993,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 810,
											"end": 993,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 810,
											"end": 993,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 810,
											"end": 993,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 810,
											"end": 993,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 810,
											"end": 993,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 810,
											"end": 993,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 810,
											"end": 993,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 810,
											"end": 993,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 810,
											"end": 993,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 810,
											"end": 993,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 810,
											"end": 993,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 810,
											"end": 993,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 810,
											"end": 993,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 810,
											"end": 993,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 810,
											"end": 993,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 810,
											"end": 993,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 810,
											"end": 993,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 810,
											"end": 993,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 810,
											"end": 993,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 810,
											"end": 993,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 810,
											"end": 993,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 810,
											"end": 993,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 810,
											"end": 993,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 810,
											"end": 993,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 810,
											"end": 993,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 810,
											"end": 993,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 810,
											"end": 993,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 810,
											"end": 993,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1866,
											"end": 2158,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1866,
											"end": 2158,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1866,
											"end": 2158,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1866,
											"end": 2158,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1866,
											"end": 2158,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1866,
											"end": 2158,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1866,
											"end": 2158,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1866,
											"end": 2158,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1866,
											"end": 2158,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1866,
											"end": 2158,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1866,
											"end": 2158,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1866,
											"end": 2158,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1866,
											"end": 2158,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1866,
											"end": 2158,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1866,
											"end": 2158,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1866,
											"end": 2158,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1866,
											"end": 2158,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1866,
											"end": 2158,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1866,
											"end": 2158,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1866,
											"end": 2158,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1866,
											"end": 2158,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1866,
											"end": 2158,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1866,
											"end": 2158,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1866,
											"end": 2158,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1866,
											"end": 2158,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1866,
											"end": 2158,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1866,
											"end": 2158,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1866,
											"end": 2158,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1866,
											"end": 2158,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1866,
											"end": 2158,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1866,
											"end": 2158,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1866,
											"end": 2158,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1866,
											"end": 2158,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1073,
											"end": 1262,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1073,
											"end": 1262,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1073,
											"end": 1262,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1073,
											"end": 1262,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1073,
											"end": 1262,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1073,
											"end": 1262,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1073,
											"end": 1262,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1073,
											"end": 1262,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1073,
											"end": 1262,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1073,
											"end": 1262,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1073,
											"end": 1262,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1073,
											"end": 1262,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1073,
											"end": 1262,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1073,
											"end": 1262,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1073,
											"end": 1262,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1073,
											"end": 1262,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1073,
											"end": 1262,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1073,
											"end": 1262,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1073,
											"end": 1262,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1073,
											"end": 1262,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1073,
											"end": 1262,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1073,
											"end": 1262,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1073,
											"end": 1262,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1073,
											"end": 1262,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1073,
											"end": 1262,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1073,
											"end": 1262,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1073,
											"end": 1262,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1073,
											"end": 1262,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1073,
											"end": 1262,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1073,
											"end": 1262,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1073,
											"end": 1262,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1073,
											"end": 1262,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1073,
											"end": 1262,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1073,
											"end": 1262,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1786,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1343,
											"end": 1786,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 1786,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 1786,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 1786,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 1786,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1343,
											"end": 1786,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 1786,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1343,
											"end": 1786,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 1786,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 1786,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1343,
											"end": 1786,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 1786,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 1786,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1343,
											"end": 1786,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1343,
											"end": 1786,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 1786,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 1786,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 1786,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 1786,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 1786,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 1786,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1343,
											"end": 1786,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 1786,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 1786,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1343,
											"end": 1786,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1343,
											"end": 1786,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1343,
											"end": 1786,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 1786,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1343,
											"end": 1786,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1343,
											"end": 1786,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1343,
											"end": 1786,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 1786,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2587,
											"end": 3319,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2587,
											"end": 3319,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2632,
											"end": 2645,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2648,
											"end": 2664,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2648,
											"end": 2662,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 2648,
											"end": 2664,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2648,
											"end": 2664,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2648,
											"end": 2664,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2632,
											"end": 2664,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2632,
											"end": 2664,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2700,
											"end": 2701,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2683,
											"end": 2702,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2683,
											"end": 2702,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2683,
											"end": 2688,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2683,
											"end": 2702,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2683,
											"end": 2702,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2683,
											"end": 2702,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2683,
											"end": 2702,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2675,
											"end": 2724,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2675,
											"end": 2724,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2675,
											"end": 2724,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2675,
											"end": 2724,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2675,
											"end": 2724,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2675,
											"end": 2724,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2675,
											"end": 2724,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2675,
											"end": 2724,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2675,
											"end": 2724,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2675,
											"end": 2724,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2675,
											"end": 2724,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2675,
											"end": 2724,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2675,
											"end": 2724,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2675,
											"end": 2724,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2675,
											"end": 2724,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2675,
											"end": 2724,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2675,
											"end": 2724,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2675,
											"end": 2724,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2675,
											"end": 2724,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2675,
											"end": 2724,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2675,
											"end": 2724,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2675,
											"end": 2724,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2675,
											"end": 2724,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2675,
											"end": 2724,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2778,
											"end": 2782,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2772,
											"end": 2783,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2818,
											"end": 2832,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2815,
											"end": 2816,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2810,
											"end": 2813,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2797,
											"end": 2833,
											"name": "CALLDATACOPY",
											"source": 2
										},
										{
											"begin": 3027,
											"end": 3028,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3007,
											"end": 3008,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2974,
											"end": 2988,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2952,
											"end": 2955,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2928,
											"end": 2933,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2903,
											"end": 2908,
											"name": "PUSH",
											"source": 2,
											"value": "2710"
										},
										{
											"begin": 2896,
											"end": 2901,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2892,
											"end": 2909,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2861,
											"end": 3043,
											"name": "DELEGATECALL",
											"source": 2
										},
										{
											"begin": 3069,
											"end": 3085,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 3122,
											"end": 3126,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3119,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3114,
											"end": 3117,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3127,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 3150,
											"end": 3156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3175,
											"end": 3176,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3170,
											"end": 3228,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3170,
											"end": 3228,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3170,
											"end": 3228,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 3170,
											"end": 3228,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3281,
											"end": 3285,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3276,
											"end": 3279,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3269,
											"end": 3286,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3170,
											"end": 3228,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 3170,
											"end": 3228,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3208,
											"end": 3212,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3203,
											"end": 3206,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3196,
											"end": 3213,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 810,
											"end": 993,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 810,
											"end": 993,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 853,
											"end": 866,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 879,
											"end": 895,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 324,
											"end": 370,
											"name": "PUSH",
											"source": 2,
											"value": "602D78BAA5535DCDA7F8B79E40E6339E355543A4727ADD9270060248E9F41912"
										},
										{
											"begin": 879,
											"end": 916,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 879,
											"end": 916,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 966,
											"end": 974,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 960,
											"end": 975,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 951,
											"end": 975,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 951,
											"end": 975,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 936,
											"end": 986,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 810,
											"end": 993,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 810,
											"end": 993,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1866,
											"end": 2158,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1866,
											"end": 2158,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 689,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 689,
											"end": 699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 689,
											"end": 701,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 689,
											"end": 701,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 689,
											"end": 701,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 675,
											"end": 701,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 675,
											"end": 701,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 675,
											"end": 685,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 675,
											"end": 701,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 675,
											"end": 701,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 675,
											"end": 701,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 667,
											"end": 702,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 667,
											"end": 702,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 667,
											"end": 702,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 667,
											"end": 702,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 667,
											"end": 702,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 667,
											"end": 702,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 667,
											"end": 702,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1946,
											"end": 1975,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1978,
											"end": 1994,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1978,
											"end": 1992,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1978,
											"end": 1994,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1978,
											"end": 1994,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1978,
											"end": 1994,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1946,
											"end": 1994,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1946,
											"end": 1994,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2038,
											"end": 2056,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2013,
											"end": 2056,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2013,
											"end": 2056,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2013,
											"end": 2034,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2013,
											"end": 2056,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2013,
											"end": 2056,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2013,
											"end": 2056,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2013,
											"end": 2056,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2005,
											"end": 2057,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2005,
											"end": 2057,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2005,
											"end": 2057,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2005,
											"end": 2057,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2005,
											"end": 2057,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2005,
											"end": 2057,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2005,
											"end": 2057,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2068,
											"end": 2106,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2087,
											"end": 2105,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2068,
											"end": 2086,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2068,
											"end": 2106,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2068,
											"end": 2106,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2068,
											"end": 2106,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2131,
											"end": 2149,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2122,
											"end": 2150,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2122,
											"end": 2150,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2122,
											"end": 2150,
											"name": "PUSH",
											"source": 2,
											"value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
										},
										{
											"begin": 2122,
											"end": 2150,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2122,
											"end": 2150,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2122,
											"end": 2150,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2122,
											"end": 2150,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2122,
											"end": 2150,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2122,
											"end": 2150,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2122,
											"end": 2150,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2122,
											"end": 2150,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2122,
											"end": 2150,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 1935,
											"end": 2158,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1866,
											"end": 2158,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1866,
											"end": 2158,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1073,
											"end": 1262,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1073,
											"end": 1262,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1120,
											"end": 1132,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1145,
											"end": 1161,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 207,
											"end": 262,
											"name": "PUSH",
											"source": 2,
											"value": "491FA9FF5DD08277A905CF36956E3786A257E6DFD0023908066C75C4559F86AF"
										},
										{
											"begin": 1145,
											"end": 1186,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1145,
											"end": 1186,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1235,
											"end": 1243,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1229,
											"end": 1244,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1221,
											"end": 1244,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1221,
											"end": 1244,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1206,
											"end": 1255,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1073,
											"end": 1262,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1073,
											"end": 1262,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1343,
											"end": 1786,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1343,
											"end": 1786,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 689,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 689,
											"end": 699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 689,
											"end": 701,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 689,
											"end": 701,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 689,
											"end": 701,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 675,
											"end": 701,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 675,
											"end": 701,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 675,
											"end": 685,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 675,
											"end": 701,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 675,
											"end": 701,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 675,
											"end": 701,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 667,
											"end": 702,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 667,
											"end": 702,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 667,
											"end": 702,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 667,
											"end": 702,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 667,
											"end": 702,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 667,
											"end": 702,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 667,
											"end": 702,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1470,
											"end": 1471,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1449,
											"end": 1472,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1449,
											"end": 1472,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 1458,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 1472,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1449,
											"end": 1472,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 1472,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 1472,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1540,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1427,
											"end": 1540,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1540,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1427,
											"end": 1540,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1540,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1427,
											"end": 1540,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1540,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1540,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1427,
											"end": 1540,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1540,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1427,
											"end": 1540,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1540,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1427,
											"end": 1540,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1427,
											"end": 1540,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1427,
											"end": 1540,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1540,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1427,
											"end": 1540,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1540,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1540,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1540,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1540,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1540,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1540,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1427,
											"end": 1540,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1586,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1586,
											"end": 1596,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1586,
											"end": 1598,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1586,
											"end": 1598,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1586,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1598,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1573,
											"end": 1598,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1582,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1598,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1573,
											"end": 1598,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1598,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1598,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1551,
											"end": 1667,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1551,
											"end": 1667,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1551,
											"end": 1667,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1551,
											"end": 1667,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1551,
											"end": 1667,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1551,
											"end": 1667,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1551,
											"end": 1667,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1551,
											"end": 1667,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1551,
											"end": 1667,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1551,
											"end": 1667,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1551,
											"end": 1667,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1551,
											"end": 1667,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1551,
											"end": 1667,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1551,
											"end": 1667,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1551,
											"end": 1667,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1551,
											"end": 1667,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1551,
											"end": 1667,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1551,
											"end": 1667,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1551,
											"end": 1667,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1551,
											"end": 1667,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1551,
											"end": 1667,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1551,
											"end": 1667,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1551,
											"end": 1667,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1551,
											"end": 1667,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1723,
											"end": 1732,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1683,
											"end": 1733,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1683,
											"end": 1733,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1709,
											"end": 1721,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 1709,
											"end": 1719,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1709,
											"end": 1721,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1709,
											"end": 1721,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 1709,
											"end": 1721,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1683,
											"end": 1733,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1683,
											"end": 1733,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1683,
											"end": 1733,
											"name": "PUSH",
											"source": 2,
											"value": "5A3E66EFAA1E445EBD894728A69D6959842EA1E97BD79B892797106E270EFCD9"
										},
										{
											"begin": 1683,
											"end": 1733,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1683,
											"end": 1733,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1683,
											"end": 1733,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1683,
											"end": 1733,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1683,
											"end": 1733,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1683,
											"end": 1733,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1683,
											"end": 1733,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1683,
											"end": 1733,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1683,
											"end": 1733,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 1744,
											"end": 1778,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 1768,
											"end": 1777,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1744,
											"end": 1767,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1744,
											"end": 1778,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1744,
											"end": 1778,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 1744,
											"end": 1778,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 1786,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 1786,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2189,
											"end": 2190,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2177,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2263,
											"end": 2271,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2166,
											"end": 2372,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2166,
											"end": 2372,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2242,
											"end": 2258,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 207,
											"end": 262,
											"name": "PUSH",
											"source": 2,
											"value": "491FA9FF5DD08277A905CF36956E3786A257E6DFD0023908066C75C4559F86AF"
										},
										{
											"begin": 2242,
											"end": 2283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2242,
											"end": 2283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2335,
											"end": 2353,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2325,
											"end": 2333,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2318,
											"end": 2354,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2303,
											"end": 2365,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2166,
											"end": 2372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2166,
											"end": 2372,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1433,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1422,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2496,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2380,
											"end": 2579,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2380,
											"end": 2579,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2457,
											"end": 2473,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 324,
											"end": 370,
											"name": "PUSH",
											"source": 2,
											"value": "602D78BAA5535DCDA7F8B79E40E6339E355543A4727ADD9270060248E9F41912"
										},
										{
											"begin": 2457,
											"end": 2494,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2457,
											"end": 2494,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2546,
											"end": 2560,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 2544,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2529,
											"end": 2561,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2514,
											"end": 2572,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2380,
											"end": 2579,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2380,
											"end": 2579,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 211,
											"end": 217,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 262,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 248,
											"end": 257,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 239,
											"end": 246,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 235,
											"end": 258,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 231,
											"end": 263,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 228,
											"end": 347,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 228,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 228,
											"end": 347,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 386,
											"end": 387,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 456,
											"end": 463,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 447,
											"end": 453,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 436,
											"end": 445,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 432,
											"end": 454,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 401,
											"end": 464,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 401,
											"end": 464,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 357,
											"end": 474,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 487,
											"end": 605,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 487,
											"end": 605,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 574,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 592,
											"end": 597,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 574,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 574,
											"end": 598,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 574,
											"end": 598,
											"name": "tag",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 574,
											"end": 598,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 569,
											"end": 572,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 562,
											"end": 599,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 487,
											"end": 605,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 487,
											"end": 605,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 487,
											"end": 605,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 611,
											"end": 977,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 611,
											"end": 977,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 753,
											"end": 756,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 774,
											"end": 841,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 838,
											"end": 840,
											"name": "PUSH",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 833,
											"end": 836,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 774,
											"end": 841,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 774,
											"end": 841,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 774,
											"end": 841,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 774,
											"end": 841,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 767,
											"end": 841,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 767,
											"end": 841,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 850,
											"end": 943,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 939,
											"end": 942,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 850,
											"end": 943,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 850,
											"end": 943,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 850,
											"end": 943,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 850,
											"end": 943,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 968,
											"end": 970,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 963,
											"end": 966,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 959,
											"end": 971,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 952,
											"end": 971,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 952,
											"end": 971,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 611,
											"end": 977,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 611,
											"end": 977,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 611,
											"end": 977,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 611,
											"end": 977,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 983,
											"end": 1349,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 983,
											"end": 1349,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1128,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1146,
											"end": 1213,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 1210,
											"end": 1212,
											"name": "PUSH",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 1205,
											"end": 1208,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1146,
											"end": 1213,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 1146,
											"end": 1213,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1146,
											"end": 1213,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 1146,
											"end": 1213,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1213,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1213,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1222,
											"end": 1315,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 1311,
											"end": 1314,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1222,
											"end": 1315,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 1222,
											"end": 1315,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1222,
											"end": 1315,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 1222,
											"end": 1315,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1340,
											"end": 1342,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1335,
											"end": 1338,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1331,
											"end": 1343,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1324,
											"end": 1343,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1324,
											"end": 1343,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 983,
											"end": 1349,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 983,
											"end": 1349,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 983,
											"end": 1349,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 983,
											"end": 1349,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1355,
											"end": 1721,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 1355,
											"end": 1721,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1497,
											"end": 1500,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1518,
											"end": 1585,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 1582,
											"end": 1584,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1577,
											"end": 1580,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1518,
											"end": 1585,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 1518,
											"end": 1585,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1518,
											"end": 1585,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 1518,
											"end": 1585,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1511,
											"end": 1585,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1511,
											"end": 1585,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1594,
											"end": 1687,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 1683,
											"end": 1686,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1594,
											"end": 1687,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 1594,
											"end": 1687,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1594,
											"end": 1687,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 1594,
											"end": 1687,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1712,
											"end": 1714,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1707,
											"end": 1710,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1703,
											"end": 1715,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1696,
											"end": 1715,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1696,
											"end": 1715,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1355,
											"end": 1721,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1355,
											"end": 1721,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1355,
											"end": 1721,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1355,
											"end": 1721,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1727,
											"end": 2093,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 1727,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1869,
											"end": 1872,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1890,
											"end": 1957,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 1954,
											"end": 1956,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 1949,
											"end": 1952,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1890,
											"end": 1957,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 1890,
											"end": 1957,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1890,
											"end": 1957,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 1890,
											"end": 1957,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1883,
											"end": 1957,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1883,
											"end": 1957,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1966,
											"end": 2059,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 2055,
											"end": 2058,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1966,
											"end": 2059,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 1966,
											"end": 2059,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1966,
											"end": 2059,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 1966,
											"end": 2059,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2084,
											"end": 2086,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2079,
											"end": 2082,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2075,
											"end": 2087,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2068,
											"end": 2087,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2068,
											"end": 2087,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1727,
											"end": 2093,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1727,
											"end": 2093,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1727,
											"end": 2093,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1727,
											"end": 2093,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2099,
											"end": 2465,
											"name": "tag",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 2099,
											"end": 2465,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2241,
											"end": 2244,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2262,
											"end": 2329,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 2326,
											"end": 2328,
											"name": "PUSH",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 2321,
											"end": 2324,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2262,
											"end": 2329,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 2262,
											"end": 2329,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2262,
											"end": 2329,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 2262,
											"end": 2329,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2255,
											"end": 2329,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2255,
											"end": 2329,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2338,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 2427,
											"end": 2430,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2338,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 2338,
											"end": 2431,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2338,
											"end": 2431,
											"name": "tag",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 2338,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2456,
											"end": 2458,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2451,
											"end": 2454,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2459,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2459,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2099,
											"end": 2465,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2099,
											"end": 2465,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2099,
											"end": 2465,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2099,
											"end": 2465,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2471,
											"end": 2693,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 2471,
											"end": 2693,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2564,
											"end": 2568,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2602,
											"end": 2604,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2591,
											"end": 2600,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2587,
											"end": 2605,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2579,
											"end": 2605,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2579,
											"end": 2605,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2615,
											"end": 2686,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2681,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2668,
											"end": 2685,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2659,
											"end": 2665,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2615,
											"end": 2686,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 2615,
											"end": 2686,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2615,
											"end": 2686,
											"name": "tag",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 2615,
											"end": 2686,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2693,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2693,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2693,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2693,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2471,
											"end": 2693,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2699,
											"end": 3118,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 2699,
											"end": 3118,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2865,
											"end": 2869,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2903,
											"end": 2905,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2892,
											"end": 2901,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2888,
											"end": 2906,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2880,
											"end": 2906,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2880,
											"end": 2906,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2952,
											"end": 2961,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2946,
											"end": 2950,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2942,
											"end": 2962,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2938,
											"end": 2939,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2927,
											"end": 2936,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2923,
											"end": 2940,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2916,
											"end": 2963,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2980,
											"end": 3111,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 3106,
											"end": 3110,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2980,
											"end": 3111,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 2980,
											"end": 3111,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2980,
											"end": 3111,
											"name": "tag",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 2980,
											"end": 3111,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2972,
											"end": 3111,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2972,
											"end": 3111,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2699,
											"end": 3118,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2699,
											"end": 3118,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2699,
											"end": 3118,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2699,
											"end": 3118,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3124,
											"end": 3543,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 3124,
											"end": 3543,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3290,
											"end": 3294,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3328,
											"end": 3330,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3317,
											"end": 3326,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3313,
											"end": 3331,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3305,
											"end": 3331,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3305,
											"end": 3331,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3377,
											"end": 3386,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3371,
											"end": 3375,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3367,
											"end": 3387,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3363,
											"end": 3364,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3352,
											"end": 3361,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3348,
											"end": 3365,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3341,
											"end": 3388,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3405,
											"end": 3536,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 3531,
											"end": 3535,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3405,
											"end": 3536,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 3405,
											"end": 3536,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3405,
											"end": 3536,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 3405,
											"end": 3536,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3397,
											"end": 3536,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3397,
											"end": 3536,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3124,
											"end": 3543,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3124,
											"end": 3543,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3124,
											"end": 3543,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3124,
											"end": 3543,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3549,
											"end": 3968,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 3549,
											"end": 3968,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3715,
											"end": 3719,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3753,
											"end": 3755,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3742,
											"end": 3751,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3738,
											"end": 3756,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3730,
											"end": 3756,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3730,
											"end": 3756,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3802,
											"end": 3811,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3796,
											"end": 3800,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3792,
											"end": 3812,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3788,
											"end": 3789,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3777,
											"end": 3786,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3773,
											"end": 3790,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3766,
											"end": 3813,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3830,
											"end": 3961,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 3956,
											"end": 3960,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3830,
											"end": 3961,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 3830,
											"end": 3961,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3830,
											"end": 3961,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 3830,
											"end": 3961,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3822,
											"end": 3961,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3822,
											"end": 3961,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3549,
											"end": 3968,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3549,
											"end": 3968,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3549,
											"end": 3968,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3549,
											"end": 3968,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3974,
											"end": 4393,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 3974,
											"end": 4393,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4140,
											"end": 4144,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4178,
											"end": 4180,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4167,
											"end": 4176,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4163,
											"end": 4181,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4155,
											"end": 4181,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4155,
											"end": 4181,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4227,
											"end": 4236,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4221,
											"end": 4225,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4217,
											"end": 4237,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4213,
											"end": 4214,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4202,
											"end": 4211,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4198,
											"end": 4215,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4191,
											"end": 4238,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4255,
											"end": 4386,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 4381,
											"end": 4385,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4255,
											"end": 4386,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 4255,
											"end": 4386,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4255,
											"end": 4386,
											"name": "tag",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 4255,
											"end": 4386,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4247,
											"end": 4386,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4247,
											"end": 4386,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3974,
											"end": 4393,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3974,
											"end": 4393,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3974,
											"end": 4393,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3974,
											"end": 4393,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4399,
											"end": 4818,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 4399,
											"end": 4818,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4565,
											"end": 4569,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4603,
											"end": 4605,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4592,
											"end": 4601,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4588,
											"end": 4606,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4580,
											"end": 4606,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4580,
											"end": 4606,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4652,
											"end": 4661,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4646,
											"end": 4650,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4642,
											"end": 4662,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4638,
											"end": 4639,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4627,
											"end": 4636,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4640,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4616,
											"end": 4663,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4811,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 4806,
											"end": 4810,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4811,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 4680,
											"end": 4811,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4680,
											"end": 4811,
											"name": "tag",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 4680,
											"end": 4811,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4672,
											"end": 4811,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4672,
											"end": 4811,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4399,
											"end": 4818,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4399,
											"end": 4818,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4399,
											"end": 4818,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4399,
											"end": 4818,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4905,
											"end": 5074,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 4905,
											"end": 5074,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4989,
											"end": 5000,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5023,
											"end": 5029,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5018,
											"end": 5021,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5011,
											"end": 5030,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5063,
											"end": 5067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5058,
											"end": 5061,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5054,
											"end": 5068,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5068,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5068,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4905,
											"end": 5074,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4905,
											"end": 5074,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4905,
											"end": 5074,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4905,
											"end": 5074,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4905,
											"end": 5074,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5080,
											"end": 5176,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 5080,
											"end": 5176,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5117,
											"end": 5124,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5146,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 5164,
											"end": 5169,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5146,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 5146,
											"end": 5170,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5146,
											"end": 5170,
											"name": "tag",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 5146,
											"end": 5170,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5135,
											"end": 5170,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5135,
											"end": 5170,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5080,
											"end": 5176,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5080,
											"end": 5176,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5080,
											"end": 5176,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5080,
											"end": 5176,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5182,
											"end": 5308,
											"name": "tag",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 5182,
											"end": 5308,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5219,
											"end": 5226,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5259,
											"end": 5301,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5252,
											"end": 5257,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5248,
											"end": 5302,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5237,
											"end": 5302,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5237,
											"end": 5302,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5182,
											"end": 5308,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5182,
											"end": 5308,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5182,
											"end": 5308,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5182,
											"end": 5308,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5437,
											"end": 5554,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 5437,
											"end": 5554,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5546,
											"end": 5547,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5543,
											"end": 5544,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5536,
											"end": 5548,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5560,
											"end": 5785,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 5560,
											"end": 5785,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5700,
											"end": 5734,
											"name": "PUSH",
											"source": 3,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 5696,
											"end": 5697,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5688,
											"end": 5694,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5684,
											"end": 5698,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5677,
											"end": 5735,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5769,
											"end": 5777,
											"name": "PUSH",
											"source": 3,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5764,
											"end": 5766,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5756,
											"end": 5762,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5752,
											"end": 5767,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5745,
											"end": 5778,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5560,
											"end": 5785,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5560,
											"end": 5785,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5791,
											"end": 6018,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 5791,
											"end": 6018,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5931,
											"end": 5965,
											"name": "PUSH",
											"source": 3,
											"value": "5472616E736665722070726F7879206F776E65727368697020746F207A65726F"
										},
										{
											"begin": 5927,
											"end": 5928,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5919,
											"end": 5925,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5915,
											"end": 5929,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5908,
											"end": 5966,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6000,
											"end": 6010,
											"name": "PUSH",
											"source": 3,
											"value": "2061646472657373000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5995,
											"end": 5997,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5987,
											"end": 5993,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5983,
											"end": 5998,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5976,
											"end": 6011,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5791,
											"end": 6018,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5791,
											"end": 6018,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6024,
											"end": 6206,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 6024,
											"end": 6206,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6164,
											"end": 6198,
											"name": "PUSH",
											"source": 3,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 6160,
											"end": 6161,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6152,
											"end": 6158,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6148,
											"end": 6162,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6141,
											"end": 6199,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6024,
											"end": 6206,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6024,
											"end": 6206,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6212,
											"end": 6379,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 6212,
											"end": 6379,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6352,
											"end": 6371,
											"name": "PUSH",
											"source": 3,
											"value": "496D706C20616464726573732069732030000000000000000000000000000000"
										},
										{
											"begin": 6348,
											"end": 6349,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6340,
											"end": 6346,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6336,
											"end": 6350,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6329,
											"end": 6372,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6212,
											"end": 6379,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6212,
											"end": 6379,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6385,
											"end": 6613,
											"name": "tag",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 6385,
											"end": 6613,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6525,
											"end": 6559,
											"name": "PUSH",
											"source": 3,
											"value": "5472616E736665722070726F7879206F776E65727368697020746F2063757272"
										},
										{
											"begin": 6521,
											"end": 6522,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6513,
											"end": 6519,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6509,
											"end": 6523,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6502,
											"end": 6560,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6594,
											"end": 6605,
											"name": "PUSH",
											"source": 3,
											"value": "656E74206F776E65720000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6589,
											"end": 6591,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6581,
											"end": 6587,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6577,
											"end": 6592,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6606,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6385,
											"end": 6613,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6385,
											"end": 6613,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6619,
											"end": 6741,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 6619,
											"end": 6741,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6692,
											"end": 6716,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 6710,
											"end": 6715,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6692,
											"end": 6716,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 6692,
											"end": 6716,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6692,
											"end": 6716,
											"name": "tag",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 6692,
											"end": 6716,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6685,
											"end": 6690,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6682,
											"end": 6717,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 6672,
											"end": 6735,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 6672,
											"end": 6735,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6731,
											"end": 6732,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6728,
											"end": 6729,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6721,
											"end": 6733,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6672,
											"end": 6735,
											"name": "tag",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 6672,
											"end": 6735,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6619,
											"end": 6741,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6619,
											"end": 6741,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"implementation()": "5c60da1b",
							"owner()": "8da5cb5b",
							"proxyOwner()": "025313a2",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"transferProxyOwnership(address)": "f1739cae",
							"upgradeTo(address)": "3659cfe6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"ProxyOwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"impl\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxyOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferProxyOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"To get the address of the proxy contract\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"proxyOwner()\":{\"details\":\"To get the address of the proxy contract's owner\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"transferProxyOwnership(address)\":{\"details\":\"To get the address of the proxy contract\"},\"upgradeTo(address)\":{\"details\":\"To upgrade the logic contract to new one\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"study/token-airdrop/contracts/Proxy.sol\":\"Proxy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"study/token-airdrop/contracts/Proxy.sol\":{\"keccak256\":\"0xc14f6b9d47aff02a50601c802e2e4d40c9774096b89c683c14b37378c9dceb5b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc64424be175f42a41456b3357cbb5ee413849dc23ebb5718c4587b45bf5af7c\",\"dweb:/ipfs/QmWa13vfGxXg6tE5X5RNjgqr4wu9Z3UsSas7pvbCQTNbsF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "study/token-airdrop/contracts/Proxy.sol:Proxy",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							134
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 135,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 134,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								134
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 124,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 124,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0",
							"usedErrors": []
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							134
						]
					},
					"id": 135,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 134,
							"linearizedBaseContracts": [
								134
							],
							"name": "Context",
							"nameLocation": "626:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 123,
										"nodeType": "Block",
										"src": "702:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 120,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 119,
												"id": 122,
												"nodeType": "Return",
												"src": "712:17:1"
											}
										]
									},
									"id": 124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:1"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "693:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:1"
									},
									"scope": 134,
									"src": "640:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 132,
										"nodeType": "Block",
										"src": "809:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 129,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 128,
												"id": 131,
												"nodeType": "Return",
												"src": "819:15:1"
											}
										]
									},
									"id": 133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:1"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "793:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 126,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:1"
									},
									"scope": 134,
									"src": "742:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 135,
							"src": "608:235:1",
							"usedErrors": []
						}
					],
					"src": "86:758:1"
				},
				"id": 1
			},
			"study/token-airdrop/contracts/Proxy.sol": {
				"ast": {
					"absolutePath": "study/token-airdrop/contracts/Proxy.sol",
					"exportedSymbols": {
						"Context": [
							134
						],
						"Ownable": [
							112
						],
						"Proxy": [
							323
						]
					},
					"id": 324,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 136,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 137,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 324,
							"sourceUnit": 113,
							"src": "60:52:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 138,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "134:7:2"
									},
									"id": 139,
									"nodeType": "InheritanceSpecifier",
									"src": "134:7:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 323,
							"linearizedBaseContracts": [
								323,
								112,
								134
							],
							"name": "Proxy",
							"nameLocation": "125:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 144,
									"mutability": "constant",
									"name": "implementationPosition",
									"nameLocation": "173:22:2",
									"nodeType": "VariableDeclaration",
									"scope": 323,
									"src": "148:114:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 140,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "148:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "696d706c656d656e746174696f6e2e636f6e74726163742e746f6b656e2d61697264726f703a32303233",
												"id": 142,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "217:44:2",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_491fa9ff5dd08277a905cf36956e3786a257e6dfd0023908066c75c4559f86af",
													"typeString": "literal_string \"implementation.contract.token-airdrop:2023\""
												},
												"value": "implementation.contract.token-airdrop:2023"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_491fa9ff5dd08277a905cf36956e3786a257e6dfd0023908066c75c4559f86af",
													"typeString": "literal_string \"implementation.contract.token-airdrop:2023\""
												}
											],
											"id": 141,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "207:9:2",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 143,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "207:55:2",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 149,
									"mutability": "constant",
									"name": "proxyOwnerPosition",
									"nameLocation": "294:18:2",
									"nodeType": "VariableDeclaration",
									"scope": 323,
									"src": "269:101:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 145,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "269:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "6f776e65722e636f6e74726163742e746f6b656e2d61697264726f703a32303233",
												"id": 147,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "334:35:2",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_602d78baa5535dcda7f8b79e40e6339e355543a4727add9270060248e9f41912",
													"typeString": "literal_string \"owner.contract.token-airdrop:2023\""
												},
												"value": "owner.contract.token-airdrop:2023"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_602d78baa5535dcda7f8b79e40e6339e355543a4727add9270060248e9f41912",
													"typeString": "literal_string \"owner.contract.token-airdrop:2023\""
												}
											],
											"id": 146,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "324:9:2",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 148,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "324:46:2",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 153,
									"name": "Upgraded",
									"nameLocation": "385:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"indexed": true,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "410:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "394:30:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "394:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "393:32:2"
									},
									"src": "379:47:2"
								},
								{
									"anonymous": false,
									"id": 159,
									"name": "ProxyOwnershipTransferred",
									"nameLocation": "438:25:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "490:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "474:29:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "474:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "530:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "514:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "514:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "463:82:2"
									},
									"src": "432:114:2"
								},
								{
									"body": {
										"id": 167,
										"nodeType": "Block",
										"src": "568:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 163,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "603:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 164,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "603:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 162,
														"name": "_setUpgradeabilityOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 291,
														"src": "579:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "579:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 166,
												"nodeType": "ExpressionStatement",
												"src": "579:35:2"
											}
										]
									},
									"id": 168,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "565:2:2"
									},
									"returnParameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "568:0:2"
									},
									"scope": 323,
									"src": "554:68:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 179,
										"nodeType": "Block",
										"src": "656:66:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 175,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 171,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "675:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 172,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "675:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 173,
																	"name": "proxyOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 192,
																	"src": "689:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 174,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "689:12:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "675:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 170,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "667:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "667:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 177,
												"nodeType": "ExpressionStatement",
												"src": "667:35:2"
											},
											{
												"id": 178,
												"nodeType": "PlaceholderStatement",
												"src": "713:1:2"
											}
										]
									},
									"id": 180,
									"name": "onlyProxyOwner",
									"nameLocation": "639:14:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "653:2:2"
									},
									"src": "630:92:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 191,
										"nodeType": "Block",
										"src": "868:125:2",
										"statements": [
											{
												"assignments": [
													187
												],
												"declarations": [
													{
														"constant": false,
														"id": 187,
														"mutability": "mutable",
														"name": "position",
														"nameLocation": "887:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 191,
														"src": "879:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 186,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "879:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 189,
												"initialValue": {
													"id": 188,
													"name": "proxyOwnerPosition",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 149,
													"src": "898:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "879:37:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "936:50:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "951:24:2",
															"value": {
																"arguments": [
																	{
																		"name": "position",
																		"nodeType": "YulIdentifier",
																		"src": "966:8:2"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "960:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "960:15:2"
															},
															"variableNames": [
																{
																	"name": "owner",
																	"nodeType": "YulIdentifier",
																	"src": "951:5:2"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 184,
														"isOffset": false,
														"isSlot": false,
														"src": "951:5:2",
														"valueSize": 1
													},
													{
														"declaration": 187,
														"isOffset": false,
														"isSlot": false,
														"src": "966:8:2",
														"valueSize": 1
													}
												],
												"id": 190,
												"nodeType": "InlineAssembly",
												"src": "927:59:2"
											}
										]
									},
									"documentation": {
										"id": 181,
										"nodeType": "StructuredDocumentation",
										"src": "730:74:2",
										"text": " @dev To get the address of the proxy contract's owner"
									},
									"functionSelector": "025313a2",
									"id": 192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "proxyOwner",
									"nameLocation": "819:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "829:2:2"
									},
									"returnParameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "861:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "853:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "853:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "852:15:2"
									},
									"scope": 323,
									"src": "810:183:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 203,
										"nodeType": "Block",
										"src": "1134:128:2",
										"statements": [
											{
												"assignments": [
													199
												],
												"declarations": [
													{
														"constant": false,
														"id": 199,
														"mutability": "mutable",
														"name": "position",
														"nameLocation": "1153:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 203,
														"src": "1145:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 198,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1145:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 201,
												"initialValue": {
													"id": 200,
													"name": "implementationPosition",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 144,
													"src": "1164:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1145:41:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1206:49:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1221:23:2",
															"value": {
																"arguments": [
																	{
																		"name": "position",
																		"nodeType": "YulIdentifier",
																		"src": "1235:8:2"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "1229:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1229:15:2"
															},
															"variableNames": [
																{
																	"name": "impl",
																	"nodeType": "YulIdentifier",
																	"src": "1221:4:2"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 196,
														"isOffset": false,
														"isSlot": false,
														"src": "1221:4:2",
														"valueSize": 1
													},
													{
														"declaration": 199,
														"isOffset": false,
														"isSlot": false,
														"src": "1235:8:2",
														"valueSize": 1
													}
												],
												"id": 202,
												"nodeType": "InlineAssembly",
												"src": "1197:58:2"
											}
										]
									},
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "1001:66:2",
										"text": " @dev To get the address of the proxy contract"
									},
									"functionSelector": "5c60da1b",
									"id": 204,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "implementation",
									"nameLocation": "1082:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1096:2:2"
									},
									"returnParameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "impl",
												"nameLocation": "1128:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "1120:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1120:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1119:14:2"
									},
									"scope": 323,
									"src": "1073:189:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 240,
										"nodeType": "Block",
										"src": "1416:370:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 218,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 213,
																"name": "_newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 207,
																"src": "1449:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 216,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1470:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 215,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1462:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 214,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1462:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 217,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1462:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1449:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e736665722070726f7879206f776e65727368697020746f207a65726f2061646472657373",
															"id": 219,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1487:42:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6acad32379028ef53b5b35d624f19ef2620f58d5c00336e523778e34a911be9b",
																"typeString": "literal_string \"Transfer proxy ownership to zero address\""
															},
															"value": "Transfer proxy ownership to zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6acad32379028ef53b5b35d624f19ef2620f58d5c00336e523778e34a911be9b",
																"typeString": "literal_string \"Transfer proxy ownership to zero address\""
															}
														],
														"id": 212,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1427:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1427:113:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 221,
												"nodeType": "ExpressionStatement",
												"src": "1427:113:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 226,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 223,
																"name": "_newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 207,
																"src": "1573:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 224,
																	"name": "proxyOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 192,
																	"src": "1586:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 225,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1586:12:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1573:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e736665722070726f7879206f776e65727368697020746f2063757272656e74206f776e6572",
															"id": 227,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1613:43:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f1a64dfdae2c8f7217ae38bfe90a69edee14854d06f4671e94d5b4f13f67ecf1",
																"typeString": "literal_string \"Transfer proxy ownership to current owner\""
															},
															"value": "Transfer proxy ownership to current owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f1a64dfdae2c8f7217ae38bfe90a69edee14854d06f4671e94d5b4f13f67ecf1",
																"typeString": "literal_string \"Transfer proxy ownership to current owner\""
															}
														],
														"id": 222,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1551:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1551:116:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 229,
												"nodeType": "ExpressionStatement",
												"src": "1551:116:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 231,
																"name": "proxyOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 192,
																"src": "1709:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 232,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1709:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 233,
															"name": "_newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 207,
															"src": "1723:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 230,
														"name": "ProxyOwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "1683:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1683:50:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 235,
												"nodeType": "EmitStatement",
												"src": "1678:55:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 237,
															"name": "_newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 207,
															"src": "1768:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 236,
														"name": "_setUpgradeabilityOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 291,
														"src": "1744:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1744:34:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 239,
												"nodeType": "ExpressionStatement",
												"src": "1744:34:2"
											}
										]
									},
									"documentation": {
										"id": 205,
										"nodeType": "StructuredDocumentation",
										"src": "1270:67:2",
										"text": " @dev  To get the address of the proxy contract"
									},
									"functionSelector": "f1739cae",
									"id": 241,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 210,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 209,
												"name": "onlyProxyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 180,
												"src": "1401:14:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1401:14:2"
										}
									],
									"name": "transferProxyOwnership",
									"nameLocation": "1352:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "_newOwner",
												"nameLocation": "1383:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "1375:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1375:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1374:19:2"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1416:0:2"
									},
									"scope": 323,
									"src": "1343:443:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 268,
										"nodeType": "Block",
										"src": "1935:223:2",
										"statements": [
											{
												"assignments": [
													250
												],
												"declarations": [
													{
														"constant": false,
														"id": 250,
														"mutability": "mutable",
														"name": "currentImplementation",
														"nameLocation": "1954:21:2",
														"nodeType": "VariableDeclaration",
														"scope": 268,
														"src": "1946:29:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 249,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1946:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 253,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 251,
														"name": "implementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 204,
														"src": "1978:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1978:16:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1946:48:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 255,
																"name": "currentImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 250,
																"src": "2013:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 256,
																"name": "_newImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 244,
																"src": "2038:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2013:43:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 254,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2005:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2005:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 259,
												"nodeType": "ExpressionStatement",
												"src": "2005:52:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 261,
															"name": "_newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 244,
															"src": "2087:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 260,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 280,
														"src": "2068:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2068:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 263,
												"nodeType": "ExpressionStatement",
												"src": "2068:38:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 265,
															"name": "_newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 244,
															"src": "2131:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 264,
														"name": "Upgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 153,
														"src": "2122:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2122:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 267,
												"nodeType": "EmitStatement",
												"src": "2117:33:2"
											}
										]
									},
									"documentation": {
										"id": 242,
										"nodeType": "StructuredDocumentation",
										"src": "1794:66:2",
										"text": " @dev To upgrade the logic contract to new one"
									},
									"functionSelector": "3659cfe6",
									"id": 269,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 247,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 246,
												"name": "onlyProxyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 180,
												"src": "1920:14:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1920:14:2"
										}
									],
									"name": "upgradeTo",
									"nameLocation": "1875:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "_newImplementation",
												"nameLocation": "1893:18:2",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "1885:26:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1885:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1884:28:2"
									},
									"returnParameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1935:0:2"
									},
									"scope": 323,
									"src": "1866:292:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 279,
										"nodeType": "Block",
										"src": "2231:141:2",
										"statements": [
											{
												"assignments": [
													275
												],
												"declarations": [
													{
														"constant": false,
														"id": 275,
														"mutability": "mutable",
														"name": "position",
														"nameLocation": "2250:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 279,
														"src": "2242:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 274,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2242:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 277,
												"initialValue": {
													"id": 276,
													"name": "implementationPosition",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 144,
													"src": "2261:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2242:41:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2303:62:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "position",
																		"nodeType": "YulIdentifier",
																		"src": "2325:8:2"
																	},
																	{
																		"name": "_newImplementation",
																		"nodeType": "YulIdentifier",
																		"src": "2335:18:2"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "2318:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2318:36:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2318:36:2"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 271,
														"isOffset": false,
														"isSlot": false,
														"src": "2335:18:2",
														"valueSize": 1
													},
													{
														"declaration": 275,
														"isOffset": false,
														"isSlot": false,
														"src": "2325:8:2",
														"valueSize": 1
													}
												],
												"id": 278,
												"nodeType": "InlineAssembly",
												"src": "2294:71:2"
											}
										]
									},
									"id": 280,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setImplementation",
									"nameLocation": "2175:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "_newImplementation",
												"nameLocation": "2202:18:2",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "2194:26:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2194:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2193:28:2"
									},
									"returnParameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2231:0:2"
									},
									"scope": 323,
									"src": "2166:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 290,
										"nodeType": "Block",
										"src": "2446:133:2",
										"statements": [
											{
												"assignments": [
													286
												],
												"declarations": [
													{
														"constant": false,
														"id": 286,
														"mutability": "mutable",
														"name": "position",
														"nameLocation": "2465:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 290,
														"src": "2457:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 285,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2457:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 288,
												"initialValue": {
													"id": 287,
													"name": "proxyOwnerPosition",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 149,
													"src": "2476:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2457:37:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2514:58:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "position",
																		"nodeType": "YulIdentifier",
																		"src": "2536:8:2"
																	},
																	{
																		"name": "_newProxyOwner",
																		"nodeType": "YulIdentifier",
																		"src": "2546:14:2"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "2529:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2529:32:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2529:32:2"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 282,
														"isOffset": false,
														"isSlot": false,
														"src": "2546:14:2",
														"valueSize": 1
													},
													{
														"declaration": 286,
														"isOffset": false,
														"isSlot": false,
														"src": "2536:8:2",
														"valueSize": 1
													}
												],
												"id": 289,
												"nodeType": "InlineAssembly",
												"src": "2505:67:2"
											}
										]
									},
									"id": 291,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setUpgradeabilityOwner",
									"nameLocation": "2389:23:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "_newProxyOwner",
												"nameLocation": "2421:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "2413:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 281,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2413:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2412:24:2"
									},
									"returnParameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2446:0:2"
									},
									"scope": 323,
									"src": "2380:199:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 310,
										"nodeType": "Block",
										"src": "2621:698:2",
										"statements": [
											{
												"assignments": [
													295
												],
												"declarations": [
													{
														"constant": false,
														"id": 295,
														"mutability": "mutable",
														"name": "_impl",
														"nameLocation": "2640:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 310,
														"src": "2632:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 294,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2632:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 298,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 296,
														"name": "implementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 204,
														"src": "2648:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2648:16:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2632:32:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 305,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 300,
																"name": "_impl",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 295,
																"src": "2683:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 303,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2700:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 302,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2692:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 301,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2692:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 304,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2692:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2683:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496d706c20616464726573732069732030",
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2704:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e952cc2cc11bced53e8d523370fdcc894adc9adccec71bcd9abffe00d6f88c9f",
																"typeString": "literal_string \"Impl address is 0\""
															},
															"value": "Impl address is 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e952cc2cc11bced53e8d523370fdcc894adc9adccec71bcd9abffe00d6f88c9f",
																"typeString": "literal_string \"Impl address is 0\""
															}
														],
														"id": 299,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2675:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2675:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 308,
												"nodeType": "ExpressionStatement",
												"src": "2675:49:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2746:566:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2761:22:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2778:4:2",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2772:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2772:11:2"
															},
															"variables": [
																{
																	"name": "ptr",
																	"nodeType": "YulTypedName",
																	"src": "2765:3:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "2810:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2815:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nodeType": "YulIdentifier",
																			"src": "2818:12:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2818:14:2"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "2797:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2797:36:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2797:36:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2847:196:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "gas",
																					"nodeType": "YulIdentifier",
																					"src": "2896:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2896:5:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2903:5:2",
																				"type": "",
																				"value": "10000"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2892:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2892:17:2"
																	},
																	{
																		"name": "_impl",
																		"nodeType": "YulIdentifier",
																		"src": "2928:5:2"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "2952:3:2"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nodeType": "YulIdentifier",
																			"src": "2974:12:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2974:14:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3007:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3027:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "delegatecall",
																	"nodeType": "YulIdentifier",
																	"src": "2861:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2861:182:2"
															},
															"variables": [
																{
																	"name": "result",
																	"nodeType": "YulTypedName",
																	"src": "2851:6:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3057:28:2",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nodeType": "YulIdentifier",
																	"src": "3069:14:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3069:16:2"
															},
															"variables": [
																{
																	"name": "size",
																	"nodeType": "YulTypedName",
																	"src": "3061:4:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "3114:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3119:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "3122:4:2"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "3099:14:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3099:28:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3099:28:2"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3177:51:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nodeType": "YulIdentifier",
																							"src": "3203:3:2"
																						},
																						{
																							"name": "size",
																							"nodeType": "YulIdentifier",
																							"src": "3208:4:2"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nodeType": "YulIdentifier",
																						"src": "3196:6:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3196:17:2"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3196:17:2"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3170:58:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3175:1:2",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3250:51:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nodeType": "YulIdentifier",
																							"src": "3276:3:2"
																						},
																						{
																							"name": "size",
																							"nodeType": "YulIdentifier",
																							"src": "3281:4:2"
																						}
																					],
																					"functionName": {
																						"name": "return",
																						"nodeType": "YulIdentifier",
																						"src": "3269:6:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3269:17:2"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3269:17:2"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3242:59:2",
																	"value": "default"
																}
															],
															"expression": {
																"name": "result",
																"nodeType": "YulIdentifier",
																"src": "3150:6:2"
															},
															"nodeType": "YulSwitch",
															"src": "3143:158:2"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 295,
														"isOffset": false,
														"isSlot": false,
														"src": "2928:5:2",
														"valueSize": 1
													}
												],
												"id": 309,
												"nodeType": "InlineAssembly",
												"src": "2737:575:2"
											}
										]
									},
									"id": 311,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_delegatecall",
									"nameLocation": "2596:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2609:2:2"
									},
									"returnParameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2621:0:2"
									},
									"scope": 323,
									"src": "2587:732:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 317,
										"nodeType": "Block",
										"src": "3355:34:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 314,
														"name": "_delegatecall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 311,
														"src": "3366:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3366:15:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 316,
												"nodeType": "ExpressionStatement",
												"src": "3366:15:2"
											}
										]
									},
									"id": 318,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3335:2:2"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3355:0:2"
									},
									"scope": 323,
									"src": "3327:62:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 321,
										"nodeType": "Block",
										"src": "3424:2:2",
										"statements": []
									},
									"id": 322,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3404:2:2"
									},
									"returnParameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3424:0:2"
									},
									"scope": 323,
									"src": "3397:29:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 324,
							"src": "116:3313:2",
							"usedErrors": []
						}
					],
					"src": "33:3398:2"
				},
				"id": 2
			}
		}
	}
}